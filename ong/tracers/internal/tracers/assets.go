// Code generated by go-bindata. DO NOT EDIT.
// sources:
// 4byte_tracer.js (2.933kB)
// bigram_tracer.js (1.712kB)
// call_tracer.js (8.956kB)
// evmdis_tracer.js (4.195kB)
// noop_tracer.js (1.271kB)
// opcount_tracer.js (1.372kB)
// prestate_tracer.js (4.287kB)
// trigram_tracer.js (1.788kB)
// unigram_tracer.js (1.469kB)

package tracers

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __4byte_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xdd\x6e\xdb\xca\x11\xbe\x96\x9e\x62\xaa\x9b\x48\x08\x45\x99\x92\x6c\xfd\xb8\x09\xa0\xfa\x38\x89\x01\xc7\x36\x2c\xa5\x07\x41\xd1\x8b\x15\x77\x48\x6e\x4d\xed\x12\xbb\x43\xc9\x8a\x8f\xdf\xbd\x98\x25\x69\x4b\x3e\x09\x4e\x7b\x45\x72\x39\xf3\xcd\xdf\x37\x33\x3b\x18\xc0\x85\x29\xf6\x56\xa5\x19\xc1\xf0\x24\x9a\xc0\x2a\x43\x48\x4d\xdf\x58\xa1\x53\x84\x45\x49\x99\xb1\xae\x3d\x18\xc0\x2a\x53\x0e\x12\x95\x23\x28\x07\x85\xb0\x04\x26\x01\x3a\x92\xce\xd5\xda\x0a\xbb\x0f\xdb\x83\x41\xa5\xf1\x93\x9f\xac\x9d\x58\x44\x70\x26\xa1\x9d\xb0\x38\x87\xbd\x29\x21\x16\x1a\x2c\x4a\xe5\xc8\xaa\x75\x49\x08\x8a\x40\x68\x39\x30\x16\x36\x46\xaa\x64\xcf\x80\x8a\xa0\xd4\x12\xad\x37\x4b\x68\x37\xae\xf1\xe1\xf3\xcd\x37\xb8\x46\xe7\xd0\xc2\x67\xd4\x68\x45\x0e\x77\xe5\x3a\x57\x31\x5c\xab\x18\xb5\x43\x10\x0e\x0a\x3e\x71\x19\x4a\x58\x7b\x38\x56\xfc\xc4\xae\x2c\x6b\x57\xe0\x93\x29\xb5\x14\xa4\x8c\x0e\x00\x15\x65\x68\x61\x8b\xd6\x29\xa3\x61\xd4\x98\xaa\x01\x03\x30\x96\x41\xba\x82\x38\x00\x0b\xa6\x60\xbd\x1e\x08\xbd\x87\x5c\xd0\xab\xea\x5f\xa6\xe3\x35\x6a\x09\x4a\x7b\x23\x99\x29\x10\x28\x13\xc4\x31\xef\x54\x9e\xc3\x1a\xa1\x74\x98\x94\x79\xc0\x58\xeb\x92\xe0\xf7\xab\xd5\x97\xdb\x6f\x2b\x58\xdc\x7c\x87\xdf\x17\xf7\xf7\x8b\x9b\xd5\xf7\x73\xd8\x29\xca\x4c\x49\x80\x5b\xac\xa0\xd4\xa6\xc8\x15\x4a\xd8\x09\x6b\x85\xa6\x3d\x98\x84\x11\xbe\x5e\xde\x5f\x7c\x59\xdc\xac\x16\xff\xb8\xba\xbe\x5a\x7d\x07\x63\xe1\xd3\xd5\xea\xe6\x72\xb9\x84\x4f\xb7\xf7\xb0\x80\xbb\xc5\xfd\xea\xea\xe2\xdb\xf5\xe2\x1e\xee\xbe\xdd\xdf\xdd\x2e\x2f\x43\x58\x22\x7b\x85\xac\xff\xd7\x19\x4f\x7c\xed\x2c\x82\x44\x12\x2a\x77\x4d\x1e\xbe\x9b\x12\x5c\x66\xca\x5c\x42\x26\xb6\x08\x16\x63\x54\x5b\x94\x20\x20\x36\xc5\xfe\x7f\x2e\x29\x63\x89\xdc\xe8\xd4\xc7\xfc\x0b\x2a\xc2\x55\x02\xda\x50\x00\x0e\x11\xfe\x9e\x11\x15\xf3\xc1\x60\xb7\xdb\x85\xa9\x2e\x43\x63\xd3\x41\x5e\x81\xb9\xc1\xc7\xb0\xcd\x88\xe3\xf5\x9e\x70\x65\x45\x8c\x16\x1c\x0a\x1b\x67\xe8\x7c\x28\xfe\x47\x5f\x49\xd4\xa4\x12\x85\xd6\x05\x4c\x50\x88\x4d\x9e\x63\x4c\x8e\xed\x6f\xbc\x60\x61\x1c\xf5\x0b\x6b\x62\x74\x4e\xe9\x94\xc3\x86\x2b\x3a\x12\x84\xaf\x48\x99\x91\x0e\x0e\xe0\xde\xc6\xe2\xd4\x0f\x6c\x72\xe1\xca\xa2\x2a\xa2\x14\x24\x02\x70\xc6\xc7\x0e\x16\x99\x62\x28\xc1\xa9\x54\x0b\x2a\x2d\xfa\x3e\x5a\x23\x6c\x04\xc5\x4c\x74\x91\x0a\xa5\x1d\xfd\x09\x90\x71\x9a\x7a\x5c\x3e\x8a\x4d\x91\xe3\x9c\xdf\x01\x3e\x82\xc4\x75\x99\x86\xc4\x29\x58\x59\xa1\x9d\x88\x99\xd8\x5d\xe8\x9c\x3c\x0e\xa3\x31\x9e\xce\x26\x38\x3a\x95\xe2\x64\x3a\x3a\x9b\x0d\x93\xd3\xd1\xf4\x2c\x1a\x47\x78\x36\x4b\xc6\x13\x9c\x4d\x46\xeb\x61\x7c\x7a\x86\x13\x31\x3d\x99\x8c\xd6\x11\x8a\x93\x69\x22\x27\xa7\x93\x08\x67\x12\x3b\x01\x3c\x79\x60\x3b\x87\xce\x41\xa6\x3b\xcf\xbd\xca\xfa\x53\xf5\x00\x38\x79\x1c\x4e\x64\x3c\x9c\x4d\xb0\x1f\x0d\xa7\x73\x88\x82\xd7\x3f\xa3\x69\x1c\x8f\xa7\xa3\xa8\x7f\x32\x87\xe1\xc1\xf9\xe9\x70\x9c\x8c\xa6\xd3\x59\x7f\x76\x76\xac\x20\x64\x72\x3a\x4b\x66\xb3\xfe\x70\xfa\x06\x2a\x1e\x4e\x23\x19\xcd\x90\xa1\xa2\xea\xf8\xb9\xfd\xd4\x6e\xf1\xb0\x91\x0e\x44\x9a\x5a\x4c\x05\x61\x55\x35\xef\xb1\xff\x91\xf0\xa0\x08\xdb\x2d\x7e\x9f\xc3\xd3\x73\xd0\xf6\x3a\xb1\xc8\xf3\xd5\xbe\x60\x4e\x53\x69\xb5\x83\x77\x89\xc8\x1d\xbe\xf3\xbc\xd0\x46\xf7\x59\xc0\xf1\xe8\xf0\x78\x05\xe2\x43\x5f\x69\x89\x8f\x5e\x80\x8f\x12\x65\x1d\xf1\x78\x15\x1b\x8f\x28\x12\x9e\x24\xef\xb6\x22\x2f\xf1\x5d\x00\x2a\xc4\x10\x36\xb8\xe1\xa2\x0a\x4b\x61\xbb\xd5\x98\x9c\x43\x52\xea\xaa\x52\xa6\x70\x64\x7b\x4f\xed\x56\xcb\xed\x14\xc5\xd9\xc1\x41\x2c\x1c\x42\xe7\x62\x71\x7d\xdd\x99\xc3\xeb\xc7\xc5\xed\x6f\x97\x9d\x79\xbb\xd5\x62\x93\xa9\x60\x6a\x4b\x69\x03\xd8\x8a\x3c\xa8\xcc\xd5\x0f\xf7\xc3\xbf\x98\x92\x9a\xa7\xfb\xc1\x6a\x55\xbc\x30\x3a\x87\xc1\x00\x1c\x89\xf8\x01\x0a\xb2\x40\xa6\x52\x6b\xbf\x98\xfe\xed\xf2\xfa\xf2\xf3\x62\x75\x79\xe4\xc2\x72\xb5\x58\x5d\x5d\x54\x47\x7f\x76\xe2\xff\xb0\x3f\xfc\x95\xfd\x56\xeb\xb9\xfd\x22\xe5\x6b\x72\xde\x6e\x35\x55\x73\xc4\x53\xca\xf1\x2c\xf2\x43\x44\xf1\xe8\xe4\xb2\xd4\xad\xe9\xfb\x9c\x3b\x86\x3b\x28\x6c\xb7\xbc\xfc\x41\xbe\x95\x0c\x7c\x73\xf9\x0c\x6f\x85\x85\x07\xdc\xc3\x07\xe8\x74\xe0\x3d\x90\xf9\x82\x8f\x5d\x25\x7b\xf0\x1e\x3a\x7d\x3e\x61\xc9\xf3\x76\xab\x45\x99\x72\xa1\x92\xee\x5f\x0f\xb8\xff\x37\x7c\x80\xe3\xef\xf7\x10\xc1\x1f\x7f\x40\x74\xe4\x26\x16\xbc\x2e\x94\xde\x9a\x07\x94\x9e\x32\x3c\x00\xf6\x60\x8a\xd8\xc8\x7a\x5f\x70\x04\xff\xfc\x0a\xf8\x88\x71\x49\xe8\xbc\xbb\x58\x1c\x78\x9b\x9b\x34\x00\xb9\xee\x01\x7b\x3b\x18\xc0\xf2\x41\x15\x7e\x69\x55\x28\xae\x82\xe1\x6d\xa8\x0d\x81\xd2\x84\x56\x8b\xdc\x53\xdb\xd5\xf1\xc5\xd4\xf8\xdb\xb0\x8f\x51\x43\x53\x84\x64\x96\x64\x95\x4e\xbb\xbd\x1e\xc7\xa8\x12\xe8\xfe\x2d\xa6\xca\x56\x9d\xfe\xf3\xba\x18\x87\xa6\x0b\x8b\xfd\xd8\x6c\x0a\x7f\xbb\xd0\x5b\x13\xfb\x1d\xec\x02\xa0\xcc\xf0\xee\xb6\x08\xff\x29\x1d\x41\x22\x74\xfc\xe2\x68\x8d\xaf\xdc\x9d\xc5\x5a\x59\x76\xc9\x2c\xa4\xb4\xe8\x9c\xf7\xc8\x33\x21\xe4\x36\xeb\x46\xbd\x57\xe7\xa2\xb3\x5e\xaf\xf7\x2b\xa7\x3e\x0b\xbf\xf7\x8f\x02\x6f\x56\x58\x1d\xbf\xd2\xcb\x1f\xf0\x01\xde\x58\x88\x89\xab\xd6\x0b\x7d\xaf\xde\x26\xdd\x97\x0c\x78\xf1\x8f\x1f\x60\x5c\x9b\xac\x20\x6e\x93\xe4\x67\x18\x6f\xf4\x2b\x9a\x78\xc6\xf9\x88\x98\xf4\x76\x1f\x3a\x5e\x5b\x5d\x0f\x12\xd4\x58\xef\x61\xdc\x0b\xbc\x6b\xfd\x71\xaf\x8e\xa7\xa1\x4e\x22\xca\x9c\x0e\xb9\xb3\xcb\xea\xdb\x81\x88\xa9\x14\x79\x4d\x17\xbe\xe7\x98\x04\x84\x6e\x18\x95\x54\x7b\xbb\xe5\xf5\x7f\xca\x21\x68\x4c\x58\x74\x3f\xb3\xc1\xc9\x63\x3b\x0d\xb9\xfc\xc6\x5f\x23\x37\x18\xa1\x15\x7c\xe5\x31\xdb\xba\xc5\xea\xa1\xe9\xe1\xaa\x59\xc8\xf9\xaf\x81\xeb\xc5\xc5\xdb\xc3\x2f\xd5\x56\x75\x7e\xe0\x54\x4c\x8f\xaf\xa4\x6e\x9a\xd9\x94\x3c\x3f\xb9\x86\xdc\xc0\x20\x72\x67\xea\xaa\xc4\xf4\x18\x2a\x5d\x94\x14\xe6\xa8\x53\xca\x0e\x2b\x74\x90\xf4\x2a\xd3\x2f\xc2\x01\x9c\x04\x3e\xd1\x6f\xd5\xfb\xe3\xde\xf1\x94\x69\xfa\xb9\xea\xe0\xe7\xf6\x7f\x03\x00\x00\xff\xff\xa5\xe1\x50\xd2\x6b\x0b\x00\x00")

func _4byte_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		__4byte_tracerJs,
		"4byte_tracer.js",
	)
}

func _4byte_tracerJs() (*asset, error) {
	bytes, err := _4byte_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4byte_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb4, 0xc5, 0x48, 0x2d, 0xd9, 0x43, 0x95, 0x93, 0x3b, 0x93, 0x2c, 0x47, 0x8c, 0x84, 0x32, 0x3c, 0x8b, 0x2e, 0xf3, 0x72, 0xc4, 0x57, 0xe6, 0x3a, 0xb3, 0xdf, 0x1d, 0xbf, 0x45, 0x3, 0xfc, 0xa}}
	return a, nil
}

var _bigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x5b\x6f\xdb\x36\x14\x7e\xf7\xaf\xf8\xde\x92\x20\xae\xd5\x6e\x2f\x83\x33\x0f\xf0\xb2\xa4\x35\x90\xda\x81\xed\xac\x08\x86\x3d\x50\xd2\x91\x44\x84\xe1\x11\xc8\x43\xbb\x42\x91\xff\x3e\x50\xb2\x7c\x19\x12\xa4\x7a\x92\xcd\xef\x76\x2e\x54\x92\xe0\x9a\xeb\xc6\xe9\xb2\x12\xfc\xf2\xf1\xd3\x6f\x58\x57\x84\x92\x3f\xb0\x53\xb6\x24\x4c\x83\x54\xec\xfc\x20\x49\xb0\xae\xb4\x47\xa1\x0d\x41\x7b\xd4\xca\x09\xb8\x80\x9c\xa0\x8d\x4e\x9d\x72\xcd\x68\x90\x24\x1d\xe3\x95\xc3\xc8\x2e\x1c\x11\x3c\x17\xb2\x55\x8e\xc6\x68\x38\x20\x53\x16\x8e\x72\xed\xc5\xe9\x34\x08\x41\x0b\x94\xcd\x13\x76\x78\xe6\x5c\x17\x4d\x14\xd4\x82\x60\x73\x72\xad\xad\x90\x7b\xf6\x7d\x86\xcf\xf3\x07\xdc\x91\xf7\xe4\xf0\x99\x2c\x39\x65\x70\x1f\x52\xa3\x33\xdc\xe9\x8c\xac\x27\x28\x8f\x3a\xfe\xe3\x2b\xca\x91\xb6\x72\x91\x78\x1b\xa3\xac\x76\x51\x70\xcb\xc1\xe6\x4a\x34\xdb\x21\x48\x4b\x45\x0e\x1b\x72\x5e\xb3\xc5\xaf\xbd\xd5\x4e\x70\x08\x76\x51\xe4\x5c\x49\x2c\xc0\x81\xeb\xc8\xbb\x80\xb2\x0d\x8c\x92\x03\xf5\xdd\x76\x1c\xaa\xce\xa1\x6d\x6b\x52\x71\x4d\x90\x4a\x49\xac\x79\xab\x8d\x41\x4a\x08\x9e\x8a\x60\x86\x51\x2b\x0d\x82\x6f\xb3\xf5\x97\xc5\xc3\x1a\xd3\xf9\x23\xbe\x4d\x97\xcb\xe9\x7c\xfd\x78\x85\xad\x96\x8a\x83\x80\x36\xd4\x49\xe9\xe7\xda\x68\xca\xb1\x55\xce\x29\x2b\x0d\xb8\x88\x0a\x5f\x6f\x96\xd7\x5f\xa6\xf3\xf5\xf4\xcf\xd9\xdd\x6c\xfd\x08\x76\xb8\x9d\xad\xe7\x37\xab\x15\x6e\x17\x4b\x4c\x71\x3f\x5d\xae\x67\xd7\x0f\x77\xd3\x25\xee\x1f\x96\xf7\x8b\xd5\xcd\x08\x2b\x8a\xa9\x28\xf2\xdf\xef\x78\xd1\xce\xce\x11\x72\x12\xa5\x8d\xef\xfb\xf0\xc8\x01\xbe\xe2\x60\x72\x54\x6a\x43\x70\x94\x91\xde\x50\x0e\x85\x8c\xeb\xe6\xa7\x47\x1a\xb5\x94\x61\x5b\xb6\x35\xbf\xb1\x8a\x98\x15\xb0\x2c\x43\x78\x22\xfc\x5e\x89\xd4\xe3\x24\xd9\x6e\xb7\xa3\xd2\x86\x11\xbb\x32\x31\x9d\x98\x4f\xfe\x18\x0d\x06\x3f\x06\x00\x90\x24\xa8\xb4\x97\x38\x9a\x28\x9a\x71\xb0\x42\xae\xdd\x35\xae\x33\xce\x09\xa9\x2e\x9d\x7a\xf6\x2d\x3a\x42\xc7\xf8\xf1\x32\xec\xb9\x46\x79\x59\xd4\x91\x1d\xdf\xc0\x35\xb9\x76\xa5\xda\xf3\xee\x70\x8c\xb3\xb3\x3d\x9e\xbe\x53\x16\x22\x00\x39\xd5\x52\x45\x9b\x1d\x71\xcf\xf8\x2b\x1e\x8c\xf1\x71\xcf\xf1\x42\xad\x83\xb6\x1b\x7e\xa2\xbc\xed\x35\x6d\xc8\x35\x7d\xc2\x76\x77\x62\xfa\xbf\xbf\xee\x0c\xc8\x8f\x5a\x76\xa4\x8e\x51\x04\x9b\x45\xcf\x73\xc3\xe5\x10\x79\x7a\x81\xae\xf6\xf8\x6c\x54\xdc\x66\x4c\x60\xb8\x1c\x71\x3d\x12\x5e\x89\xd3\xb6\x3c\xbf\xb8\x3a\xc1\x74\x71\x3b\x58\x49\x5d\xc8\x63\x8c\x2e\x70\xbe\xc3\x4c\x20\x95\xf6\xa3\x7d\x2d\x17\x07\xb7\x5e\xed\x89\x1a\x1c\xc1\x16\xf5\xe5\xd9\x87\xb3\x4b\xae\xaf\x4e\x90\x51\xb3\xc5\xc4\xb6\xff\xf3\x44\xcd\xbf\xff\x93\x8a\xcf\x29\xe0\xf2\xf2\x54\xe2\xe5\xe4\x17\x19\x4f\x78\x4f\x02\x13\x7c\x7a\x4b\xe4\xf0\x76\x94\x1d\x13\x1c\x27\x3f\x2d\x1e\x93\xae\x75\xdd\xf9\x61\x71\x0a\x15\x8c\x1c\x4f\x75\x5b\xed\xee\xb0\xca\x24\x28\x73\xb4\x29\x5c\x40\xd9\x7e\xd6\x45\x77\xbb\xa2\x4a\x2b\xf1\xea\x74\x0f\x36\x8e\xfc\x6b\x3e\xca\x98\xd6\xab\x13\xf5\xdd\xdd\x4c\x89\x2c\xb4\xc4\x0d\xa6\x1c\xbc\x21\x17\xbf\xca\x70\x24\xc1\x59\xdf\x2b\x46\x5a\xa1\xad\x32\xbd\xf6\xee\x0a\x8b\x53\x99\xb6\x65\x17\xad\x3b\x3a\xca\x96\xc9\xf7\xe3\xad\xeb\x34\x0f\x8d\xdf\x77\xe7\x65\xf0\x5f\x00\x00\x00\xff\xff\xde\x5d\x1b\xc6\xa6\x06\x00\x00")

func bigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_bigram_tracerJs,
		"bigram_tracer.js",
	)
}

func bigram_tracerJs() (*asset, error) {
	bytes, err := bigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x77, 0x6c, 0xd, 0x24, 0xf2, 0x49, 0xbd, 0x58, 0x8b, 0xb5, 0xd1, 0xc9, 0xcd, 0xcf, 0x5b, 0x3e, 0x5c, 0xfb, 0x14, 0x50, 0xe7, 0xe3, 0xb9, 0xd1, 0x54, 0x69, 0xe6, 0x5e, 0x45, 0xa6, 0x2c, 0x6c}}
	return a, nil
}

var _call_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\xdf\x73\xdb\x36\xf2\x7f\x96\xfe\x8a\x4d\x1e\x6a\x69\xa2\x48\x4a\xd2\x6f\xbf\x33\x76\xd5\x1b\xd5\x51\x52\xcf\xb8\x71\xc6\x56\x9a\xc9\x64\xf2\x00\x91\x4b\x0a\x35\x04\xb0\x00\x68\x59\xd7\xfa\x7f\xbf\xd9\x05\x48\x91\x92\xec\xf8\x7a\x9d\x9b\xde\x9b\x48\xec\x2e\x17\xbb\x9f\xfd\x05\x68\x34\x82\x53\x53\x6c\xac\xcc\x97\x1e\x5e\x8e\x5f\xfc\x3f\xcc\x97\x08\xb9\x79\x6e\xac\xd0\x39\xc2\xb4\xf4\x4b\x63\x5d\x77\x34\x82\xf9\x52\x3a\xc8\xa4\x42\x90\x0e\x0a\x61\x3d\x98\x0c\x7c\x8b\x5a\xc9\x85\x15\x76\x33\xec\x8e\x46\x81\xe3\xc0\x22\x71\x67\x16\x11\x9c\xc9\xfc\x5a\x58\x3c\x86\x8d\x29\x21\x11\x1a\x2c\xa6\xd2\x79\x2b\x17\xa5\x47\x90\x1e\x84\x4e\x47\xc6\xc2\xca\xa4\x32\xdb\x90\x40\xe9\xa1\xd4\x29\x5a\xfe\xac\x47\xbb\x72\x95\x0e\x6f\xdf\x7d\x80\x73\x74\x0e\x2d\xbc\x45\x8d\x56\x28\x78\x5f\x2e\x94\x4c\xe0\x5c\x26\xa8\x1d\x82\x70\x50\xd0\x1b\xb7\xc4\x14\x16\x2c\x8e\x18\xdf\x90\x2a\x57\x51\x15\x78\x63\x4a\x9d\x0a\x2f\x8d\x1e\x00\x4a\xbf\x44\x0b\x37\x68\x9d\x34\x1a\x5e\x55\x9f\x8a\x02\x07\x60\x2c\x09\xe9\x09\x4f\x1b\xb0\x60\x0a\xe2\xeb\x83\xd0\x1b\x50\xc2\x6f\x59\xbf\x6a\x8e\xed\xae\x53\x90\x9a\x3f\xb2\x34\x05\x82\x5f\x0a\x4f\x7b\x5e\x4b\xa5\x60\x81\x50\x3a\xcc\x4a\x35\x20\x59\x8b\xd2\xc3\xc7\xb3\xf9\x4f\x17\x1f\xe6\x30\x7d\xf7\x09\x3e\x4e\x2f\x2f\xa7\xef\xe6\x9f\x4e\x60\x2d\xfd\xd2\x94\x1e\xf0\x06\x83\x28\xb9\x2a\x94\xc4\x14\xd6\xc2\x5a\xa1\xfd\x06\x4c\x46\x12\x7e\x9e\x5d\x9e\xfe\x34\x7d\x37\x9f\xfe\x78\x76\x7e\x36\xff\x04\xc6\xc2\x9b\xb3\xf9\xbb\xd9\xd5\x15\xbc\xb9\xb8\x84\x29\xbc\x9f\x5e\xce\xcf\x4e\x3f\x9c\x4f\x2f\xe1\xfd\x87\xcb\xf7\x17\x57\xb3\x21\x5c\x21\x69\x85\xc4\xff\x75\x8b\x67\xec\x3b\x8b\x90\xa2\x17\x52\xb9\xca\x0e\x9f\x4c\x09\x6e\x69\x4a\x95\xc2\x52\xdc\x20\x58\x4c\x50\xde\x60\x0a\x02\x12\x53\x6c\x1e\xed\x52\x92\x25\x94\xd1\x39\xef\xf9\x1e\x28\xc2\x59\x06\xda\xf8\x01\x38\x44\xf8\x7e\xe9\x7d\x71\x3c\x1a\xad\xd7\xeb\x61\xae\xcb\xa1\xb1\xf9\x48\x05\x61\x6e\xf4\xc3\xb0\x4b\x12\x13\xa1\xd4\xdc\x8a\x04\x2d\xb9\x46\x40\x56\x92\xf1\x95\x59\x6b\xf0\x56\x68\x27\x12\x72\x33\xfd\x4e\x18\x88\xc2\x03\xde\xd2\x93\x77\x04\x58\xb0\x58\x18\x4b\xbf\x95\xaa\x30\x26\xb5\x47\xab\x85\x62\xd9\x0e\x56\x22\x45\x58\x6c\x40\x34\x05\x0e\x9a\x5b\x21\x08\x05\x67\x83\xd4\x99\xb1\x2b\x86\xe4\xb0\xfb\x7b\xb7\x13\x35\x74\x5e\x24\xd7\xa4\x20\xc9\x4f\x4a\x6b\x51\x7b\x32\x64\x69\x9d\xbc\x41\x26\x81\x40\x13\xad\x39\xfb\xe5\x67\xc0\x5b\x4c\xca\x20\xa9\x53\x0b\x39\x86\xcf\xbf\xdf\x7d\x19\x74\x59\x74\x8a\x2e\x41\x9d\x62\xca\xfb\xbb\x76\xb0\x5e\x1a\x9d\xa3\x85\x35\x1e\xdd\x20\xfc\x5a\x3a\xdf\xa0\xc9\xac\x59\x81\xd0\x60\x4a\x42\x7b\xd3\x3a\x52\x7b\xc3\x02\x05\xfd\xd6\x68\x59\xa3\x61\xb7\x53\x33\x1f\x43\x26\x94\xc3\xf8\x5d\xe7\xb1\xa0\xdd\x48\x7d\x63\xae\x49\xb2\xb1\x04\x60\xbb\x01\x53\x24\x26\x8d\xa1\x40\xfb\xa8\xb7\x81\x6e\xd8\xed\x10\xdf\x31\x64\xa5\xe6\xcf\xf6\x94\xc9\x07\x90\x2e\xfa\xf0\x7b\xb7\x43\x62\x4f\x45\xe1\x4b\x8b\x6c\x4f\xb4\xd6\x58\x07\x72\xb5\xc2\x54\x0a\x8f\x6a\xd3\xed\x74\x6e\x84\x0d\x0b\x30\x01\x65\xf2\x61\x8e\x7e\x46\x8f\xbd\xfe\x49\xb7\xd3\x91\x19\xf4\xc2\xea\x93\xc9\x84\x33\x4f\x26\x35\xa6\x41\x7c\xc7\x2f\xa5\x1b\x66\xa2\x54\xbe\xfe\x2e\x31\x75\x2c\xfa\xd2\x6a\xfa\x79\x17\xb4\xf8\x88\x60\xb4\xda\x40\x42\x19\x46\x2c\x28\x38\xdd\xc6\x79\x5c\xc5\xcd\xb9\x01\x64\xc2\x91\x09\x65\x06\x6b\x84\xc2\xe2\xf3\x64\x89\xe4\x3b\x9d\x60\xd4\xd2\x6d\x1c\x3b\x75\x02\xf4\xb5\xa1\x29\x86\xde\xbc\x2b\x57\x0b\xb4\xbd\x3e\x7c\x03\xe3\xdb\x6c\xdc\x87\xc9\x84\x7f\x54\xba\x47\x9e\xa8\x2f\x49\x31\x45\xdc\x28\xf3\x5f\x79\x2b\x75\x1e\xf6\x1a\x75\x3d\xcb\x40\x80\xc6\x35\x24\x46\x33\xa8\xc9\x2b\x0b\x94\x3a\x87\xc4\xa2\xf0\x98\x0e\x40\xa4\x29\x78\x13\x90\x57\xe3\xac\xfd\x49\xf8\xe6\x1b\xe8\xd1\xc7\x26\x70\x74\x7a\x39\x9b\xce\x67\x47\xf0\xc7\x1f\x10\xde\x3c\x0d\x6f\x5e\x3e\xed\x37\x34\x93\xfa\x22\xcb\xa2\x72\x2c\x70\x58\x20\x5e\xf7\x5e\xf4\x87\x37\x42\x95\x78\x91\x05\x35\x23\xed\x4c\xa7\x30\x89\x3c\xcf\x76\x79\x5e\xb6\x78\x88\x69\x34\x82\xa9\x73\xb8\x5a\x28\xdc\x0f\xc8\x18\xb1\x1c\xbc\xce\x53\xbe\x22\xf4\x25\x66\x55\x28\x24\x54\x55\x5f\x8d\xe6\x67\x8d\x3b\x7e\x53\xe0\x31\x00\x80\x29\x06\xfc\x82\x62\x81\x5f\x78\xf3\x13\xde\xb2\x8f\x2a\x13\x12\xaa\xa6\x69\x6a\xd1\xb9\x5e\xbf\x1f\xc8\xa5\x2e\x4a\x7f\xdc\x22\x5f\xe1\xca\xd8\xcd\xd0\x51\x42\xea\xf1\xd6\x06\x61\xa7\x15\x4f\x2e\xdc\x99\x26\x9e\x88\xd4\xb7\xc2\xf5\xb6\x4b\xa7\xc6\xf9\xe3\x6a\x89\x1e\xaa\x35\xb6\x05\xb1\x1d\x8d\x6f\x8f\xf6\xad\x35\xee\x6f\x91\xf0\xe2\xbb\x3e\xb1\xdc\x9d\xd4\xf8\xae\xd3\xc4\xb0\x28\xdd\xb2\xc7\x70\xda\xae\x6e\x53\xc1\x04\xbc\x2d\xf1\x20\xfc\x19\x52\xfb\x70\x72\xa8\x32\xca\x25\xde\x96\x09\xc3\x2a\x17\x5c\x6f\x39\xd2\x05\x65\x5e\x57\x2e\xd8\xe6\xde\x98\x7d\x74\x45\x70\x5d\xcd\xce\xdf\xbc\x9e\x5d\xcd\x2f\x3f\x9c\xce\x8f\x1a\x70\x52\x98\x79\x52\xaa\xbd\x07\x85\x3a\xf7\x4b\xd6\x9f\xc4\xb5\x57\x3f\x13\xcf\xf3\x17\x5f\xc2\x1b\x98\x1c\x08\xf9\xce\xc3\x1c\xf0\xf9\x0b\xcb\xbe\xdb\x37\x5f\x9b\x34\x18\xf3\xaf\x41\x92\x37\x4c\x5c\x91\x7b\x53\x11\x3c\xec\xe7\xbf\x18\x54\xe9\x82\x28\x7e\x14\x4a\xe8\x04\x1f\xd0\x79\x1f\x6b\xcd\xa4\x79\x20\x0f\xfd\x8c\x7e\x69\x52\x2e\x0c\x89\x08\xb5\xa5\x42\x50\x6a\x34\xfe\xfb\xd9\x68\x7a\x7e\xde\xc8\x45\xfc\x7c\x7a\xf1\xba\x99\x9f\x8e\x5e\xcf\xce\x67\x6f\xa7\xf3\xd9\x2e\xed\xd5\x7c\x3a\x3f\x3b\xe5\xb7\x55\xea\x1a\x8d\xe0\xea\x5a\x16\x5c\x61\x38\x6f\x9b\x55\xc1\x2d\x72\xad\xaf\x1b\x80\x5f\x1a\x6a\x40\x6d\x2c\xa0\x99\xd0\x49\x55\xd8\x5c\x05\x58\x6f\x08\xae\xf7\x39\xef\xc5\x8e\xf3\x6a\x08\x4b\xf7\xde\x62\xfc\x68\xda\xf3\xa6\xd2\x6b\x6b\xd0\x80\x46\x4e\xfe\x9c\x60\x7b\x8f\xdf\x24\xfc\x03\xc6\x70\x0c\x2f\x62\x16\x7d\x20\x4d\xbf\x84\x67\x24\xfe\x4f\x24\xeb\x57\x07\x38\xff\x9e\x29\x7b\x2f\xd0\xfe\xfb\xa9\xdc\x94\xfe\x22\xcb\x8e\x61\xd7\x88\xdf\xee\x19\xb1\xa6\x3f\x47\xbd\x4f\xff\x7f\x7b\xf4\xdb\xb4\x4f\xa8\x32\x05\x3c\xd9\x83\x48\x48\xba\x4f\x76\xe2\x20\x1a\x97\xdb\x3b\x96\x06\x93\x7b\x0a\xcd\xcb\x36\x86\xef\xcb\x94\xff\x51\xa1\x39\xd8\xa6\x52\x33\xda\x6e\x44\x07\x60\xd1\x5b\x89\x37\x34\x66\x1e\x39\x16\x49\x0d\xbb\x59\x53\xfa\x1a\xc2\x47\x0c\x12\x35\x22\x27\x97\xd8\xe0\x53\x7f\xc6\x3d\x2f\x35\xe9\x71\x50\x63\x88\x09\xee\xc3\x2d\xc2\x4a\x6c\x68\x50\xcb\x4a\x7d\xbd\x81\x5c\x38\x48\x37\x5a\xac\x64\xe2\x82\x3c\x6e\xee\x2d\xe6\xc2\xb2\x58\x8b\xbf\x95\xe8\x68\xea\x23\x20\x8b\xc4\x97\x42\xa9\x0d\xe4\x92\x46\x37\xe2\xee\xbd\x7c\x35\x1e\x83\xf3\xb2\x40\x9d\x0e\xe0\xbb\x57\xa3\xef\xbe\x05\x5b\x2a\xec\x0f\xbb\x8d\x12\x56\x6f\x35\x7a\x83\x16\x22\x7a\x5e\x63\xe1\x97\xbd\x3e\xfc\x70\x4f\x2d\xbc\xa7\xb0\x1d\xa4\x85\xe7\xf0\xe2\xcb\x90\xf4\x9a\xb4\x70\x1b\x3c\x09\xa8\x1c\x46\x69\x34\xec\x5e\xbc\xbe\xe8\x5d\x0b\x2b\x94\x58\x60\xff\x98\x87\x5f\xb6\xd5\x5a\xc4\x09\x88\x9c\x02\x85\x12\x52\x83\x48\x12\x53\x6a\x4f\x86\xaf\x86\x19\xb5\xa1\xfc\x7e\xe4\x2b\x79\x3c\x29\x8a\x24\x41\xe7\xaa\x74\xcf\x5e\x23\x75\xc4\x8a\xb8\x41\x6a\x27\x53\x6c\x78\x85\xb2\x83\xe1\xd4\x1c\x29\x68\x90\xae\x04\xae\x8c\xa3\x8f\x2c\x10\xd6\x96\x06\x2f\x27\x75\xc2\xa7\x0e\x29\x92\xb5\x1d\x18\x0d\x02\x94\xe1\x63\x0e\x8e\x71\x10\x36\x77\xc3\x90\xef\xe9\xb3\x94\x73\xb4\x59\x0f\xdb\x40\x6e\x42\x95\x47\x9c\x9d\x56\x48\x03\xde\x4a\xe7\xb9\xa3\x26\x2d\xa5\x83\x80\x64\xa9\xf3\x01\x14\xa6\xe0\x3c\xfd\xb5\x72\x16\x93\xf5\xe5\xec\x97\xd9\x65\xdd\xf8\x3c\xde\x89\xd5\xcc\xf3\xb4\x1e\x09\xc1\xd2\xbc\xe5\x31\x7d\x7a\x60\x88\x39\x00\xa8\xc9\x3d\x80\x22\xf9\xdb\xda\xf8\xbe\xb1\x1d\x25\x9c\xdf\x3a\x26\xc7\x30\xcf\x35\x15\x70\xa5\xf2\x6e\x27\x77\xef\x26\x07\x53\x54\x15\x82\x94\xe2\xb4\x43\x89\x7d\x77\xd2\x68\x2d\x6c\x07\x8e\x2d\x3e\xcf\x1a\x36\x5e\x73\xbb\x19\x88\x1a\xa9\x81\xd7\xab\xbe\x55\x84\x6a\xc0\xba\x9b\xd2\x13\x1c\xa8\x7e\x6f\x93\x5f\x2e\xdc\x07\xc7\x5e\x8f\xe9\x6f\x21\xf3\x33\xed\x7b\xd5\xe2\x99\x86\xe7\x50\x3d\x50\x52\x87\xe7\xad\x28\x3a\x90\x1d\x3b\x29\x2a\xf4\x08\x5b\x11\x27\xb0\xf3\x8a\x04\x05\x73\xb0\xd1\x2c\xfa\xfd\xe2\x3c\x8e\xd2\xc8\x60\x4f\x2c\xfa\x21\xfe\x56\x0a\xe5\x7a\xe3\xba\x59\x08\x3b\xf0\x86\xcb\xdb\x64\xaf\x93\x24\x9e\x76\xef\x78\xd2\x60\x8b\xd6\xa8\xd8\x42\x27\x78\x6a\x52\x7c\x50\x42\x14\x11\xd3\x46\xed\xcb\x08\xcc\x43\xbd\x77\xa7\x49\x00\x4f\xeb\x86\x20\x13\x52\x95\x16\x9f\x9e\xc0\x81\xb4\xe3\x4a\x9b\x89\x84\x7d\xe9\x10\x78\x5a\x77\xe0\xcc\x0a\x97\x66\x1d\x14\x38\x94\xbc\xf6\xc1\x51\xe3\x60\xa7\x7c\xf0\xa1\x93\x70\x50\x3a\x91\x63\x03\x1c\xb5\xc1\x2b\x47\x1d\x3c\x42\xf8\xd3\xd0\x79\x56\x3f\x3e\x02\x45\x77\x7f\x0d\x3c\x76\xfc\xbc\xd7\xe7\x54\x44\xdc\xed\x34\x1e\x2a\x65\x43\x33\xf2\xf7\x72\xfc\xa3\x23\x6c\x97\x36\x6c\xad\x4d\x1c\x36\xb8\xed\x6b\xbe\xee\xfe\x7a\xf5\x3e\xcf\xdf\xd7\x32\x11\x46\xf5\xaf\x98\xf8\x2d\x4e\xb9\xcb\xa1\xa7\xc2\xe2\x8d\x34\x25\x15\x30\xfc\x5f\x1a\x87\xeb\x96\xef\xae\xdb\xb9\x8b\xe7\x82\xec\xb7\xe6\xc1\xe0\x7a\x19\x4f\xb5\x43\xb7\xd4\x28\x1f\x86\x6b\x6b\x3c\x2e\xcc\xc2\x79\x73\x87\xf9\x1f\x38\x20\x8c\x81\xee\x4d\x41\xed\x40\xac\x4e\xca\xa2\x48\x37\x75\x41\x1c\x84\x46\x04\x96\x42\xa7\x71\x18\x11\x69\x2a\x49\x1e\x83\x90\x34\x14\xb9\x90\xba\x7b\xd0\x8c\x5f\xad\xc2\x87\x90\xb1\xd7\xdb\x36\x0b\x69\x1c\x22\x69\xe2\x63\x8d\xbb\x8f\x28\x98\x3b\x41\xb4\x7b\xd6\x19\x8f\x4b\x8d\x76\xe5\x8a\x3b\x61\x10\x37\x42\x2a\x41\xd3\x17\x77\x58\x3a\x85\x44\xa1\xd0\xe1\x76\x03\x33\x6f\x6e\xd0\xba\xee\x23\x40\xfe\x67\x30\xbe\x93\x15\xab\xc7\x68\x8e\xc7\xc7\xec\x63\x23\x36\x6c\xff\x8d\x12\xde\x47\x78\x35\xcc\x1b\x22\x4b\x7a\xbe\xf4\x42\xed\xbb\x8f\x0b\x29\xee\x99\x88\xe6\x07\x18\x37\xfa\xf2\xbf\x4b\x90\xed\x43\xec\xbc\xee\xcf\xe2\xe6\xbd\x31\x03\x50\x28\x78\x4a\xaa\x2e\xa6\xaa\x7e\xf4\xa1\xa1\xad\x8a\xde\xd0\xd1\xed\x85\x2f\x9f\xe9\x2d\xb1\x3a\x01\x09\xad\xfd\x02\x51\x83\xf4\x68\x05\xcd\x43\x84\xae\x78\x9b\x42\x5a\x3a\x16\xc7\x7e\x91\x14\x74\x51\x70\xbc\xda\xa0\xc2\x2c\x75\x3e\xec\x76\xc2\xfb\x46\xbc\x27\xfe\x76\x1b\xef\xa1\x02\x32\x67\x3c\x13\xa8\x8f\x04\x12\x7f\xcb\xdd\x22\x8f\xcd\x3b\xe7\x02\xb4\x46\xaf\xc2\x4c\xbd\x73\x0a\xc0\x8c\xf1\x24\x60\xf7\x4c\x8c\xd6\xf8\x5d\x0b\xe0\x4c\x9a\x0b\x17\xc4\xec\x84\x84\xbf\xdd\x8f\x88\x8a\x81\x82\xe1\xf8\x30\x03\x2d\x1d\x60\xda\x39\x99\x20\x62\x7e\x15\x56\x43\x3d\x3f\x6e\xae\x86\x57\x71\xa3\x72\xd5\xb0\x8d\x5c\xb1\x6d\xee\x4e\x0e\x27\xb9\x71\x85\xc7\xc3\xc9\x8c\x6c\x5e\x03\xf6\x1e\xd6\xe6\xac\xb1\x4f\xf2\x50\xaa\x64\xe9\x55\x66\xbb\x87\x95\xa5\x37\x5a\x0e\x7f\xfb\x78\x91\x35\x71\x53\xc5\x16\x4d\x4b\x08\x9f\x36\xee\x2d\x1f\x9a\xb4\x68\x50\x89\x84\x55\x73\x35\x99\x3c\x1d\xdf\xd6\x17\x23\x31\x57\xb5\x68\x2a\x25\x42\x64\x84\xfd\x72\x54\xc8\x7f\x62\xfc\x6c\x33\x06\xab\x25\xb0\x18\x2e\x70\xb8\x9b\xa5\x10\x34\x0b\x6e\x20\x4a\x47\xa3\xe8\x36\xb6\x52\x74\xd2\x62\x0a\x99\x44\x95\x82\x49\xd1\xf2\xa0\xfb\xab\x33\x3a\x5c\xd5\xa1\x95\x24\x31\x5c\x49\x86\x7f\x05\xf0\x45\xa9\x96\x09\xfa\x0d\x64\x28\xf8\xce\xcd\x1b\x28\x84\x73\xb0\x42\x41\xa3\x6d\x56\x2a\xb5\x01\x63\x53\x24\xe1\xf5\xac\x47\x61\x6d\xa0\x74\x68\xf9\xae\x31\x96\x5a\x6e\xf1\x0a\xea\x56\xa5\x1f\xc4\xe3\x1c\xe9\x0a\x25\x36\x20\x3d\x95\xf5\xb8\xa9\x66\xa4\xd7\x17\x5d\x7c\x5b\x66\xc8\xc0\xfb\x61\x5e\x4d\x85\xed\x38\xe7\xd7\xf4\xd4\x8e\xf0\x38\x14\xb5\x63\x7b\x7b\xd0\xd5\x0e\xe4\xaa\xf4\xb4\xa3\xb5\x59\xc8\xda\x21\xc9\x2b\xfc\xd4\x0e\xc6\x46\xab\xcd\x0b\x8c\xa0\x9a\x81\x9f\x76\xc2\x93\xb5\x8c\xf1\x19\xae\x75\x6b\x72\x7e\x1a\x44\xc0\x90\x17\x7b\x64\x9c\x6b\xdc\x50\x36\x0f\x36\x6a\x94\xa6\xf0\xe2\xf3\x35\x6e\xbe\x1c\xae\x44\x11\x8e\x0d\xba\xba\xf4\x54\x61\x11\xd6\x1e\x48\x06\xb5\x16\x72\x32\x3e\x01\xf9\x7d\x93\xa1\xaa\x9e\x20\x9f\x3d\xab\xbe\xd9\x5c\xff\x2c\xbf\x54\x11\x5e\x23\x7e\x67\xbd\xdf\xd2\x28\xc6\x48\xa0\xa1\xa0\xe8\xde\x75\xff\x15\x00\x00\xff\xff\xb1\xaa\xef\x47\xf2\x22\x00\x00")

func call_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_call_tracerJs,
		"call_tracer.js",
	)
}

func call_tracerJs() (*asset, error) {
	bytes, err := call_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "call_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x46, 0x79, 0xb6, 0xbc, 0xd2, 0xc, 0x25, 0xb1, 0x22, 0x56, 0xef, 0x77, 0xb9, 0x5e, 0x2e, 0xf4, 0xda, 0xb2, 0x2f, 0x53, 0xa4, 0xff, 0xc8, 0xac, 0xbb, 0x75, 0x22, 0x46, 0x59, 0xe3, 0x1d, 0x7d}}
	return a, nil
}

var _evmdis_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\xdf\x6f\xda\xca\x12\x7e\x86\xbf\x62\x94\x27\x50\x29\x60\x63\x28\x38\x27\x47\xe2\xa6\xb4\x87\xab\x34\x89\x80\xdc\xa3\x0a\xe5\x61\x81\x31\xac\x6a\xbc\xd6\xee\x9a\x1c\x6e\x95\xff\xfd\x6a\x76\xd6\xfc\x68\x92\xdb\x53\xe9\xf4\x61\xa7\xf6\xce\xf7\xcd\xb7\x33\xe3\x59\xd2\x6a\xc1\xb5\xca\xf7\x5a\xae\x37\x16\xc2\x76\xf0\x01\x66\x1b\x84\xb5\x7a\xaf\xb4\xc8\xd6\x08\xc3\xc2\x6e\x94\x36\xd5\x56\x0b\x66\x1b\x69\x20\x91\x29\x82\x34\x90\x0b\x6d\x41\x25\x60\xcf\xbc\x53\xb9\xd0\x42\xef\x9b\xd5\x56\x8b\x11\xaf\x6c\x12\x3a\xd1\x88\x60\x54\x62\x9f\x84\xc6\x18\xf6\xaa\x80\xa5\xc8\x40\xe3\x4a\x1a\xab\xe5\xa2\xb0\x08\xd2\x82\xc8\x56\x2d\xa5\x61\xab\x56\x32\xd9\x13\xa1\xb4\x50\x64\x2b\xd4\x2e\xac\x45\xbd\x35\xa5\x86\xcf\xb7\x0f\x70\x83\xc6\xa0\x86\xcf\x98\xa1\x16\x29\xdc\x17\x8b\x54\x2e\xe1\x46\x2e\x31\x33\x08\xc2\x40\x4e\x6f\xcc\x06\x57\xb0\x70\x74\x04\xfc\x44\x52\xa6\x5e\x0a\x7c\x52\x45\xb6\x12\x56\xaa\xac\x01\x28\xed\x06\x35\xec\x50\x1b\xa9\x32\xe8\x94\xa1\x3c\x61\x03\x94\x26\x92\x9a\xb0\x74\x00\x0d\x2a\x27\x5c\x1d\x44\xb6\x87\x54\xd8\x23\xf4\xa7\xe9\x38\x9e\x7a\x05\x32\x73\x41\x36\x2a\x47\xb0\x1b\x61\xe9\xcc\x4f\x32\x4d\x61\x81\x50\x18\x4c\x8a\xb4\x41\x5c\x8b\xc2\xc2\x9f\xe3\xd9\x1f\x77\x0f\x33\x18\xde\x7e\x85\x3f\x87\x93\xc9\xf0\x76\xf6\xf5\x12\x9e\xa4\xdd\xa8\xc2\x02\xee\x90\xa9\xe4\x36\x4f\x25\xae\xe0\x49\x68\x2d\x32\xbb\x07\x95\x10\xc3\x97\xd1\xe4\xfa\x8f\xe1\xed\x6c\xf8\xaf\xf1\xcd\x78\xf6\x15\x94\x86\x4f\xe3\xd9\xed\x68\x3a\x85\x4f\x77\x13\x18\xc2\xfd\x70\x32\x1b\x5f\x3f\xdc\x0c\x27\x70\xff\x30\xb9\xbf\x9b\x8e\x9a\x30\x45\x52\x85\x84\xff\x79\xc6\x13\x57\x3b\x8d\xb0\x42\x2b\x64\x6a\xca\x3c\x7c\x55\x05\x98\x8d\x2a\xd2\x15\x6c\xc4\x0e\x41\xe3\x12\xe5\x0e\x57\x20\x60\xa9\xf2\xfd\xdf\x2e\x29\x71\x89\x54\x65\x6b\x77\xe6\x37\x5a\x11\xc6\x09\x64\xca\x36\xc0\x20\xc2\x6f\x1b\x6b\xf3\xb8\xd5\x7a\x7a\x7a\x6a\xae\xb3\xa2\xa9\xf4\xba\x95\x32\x99\x69\xfd\xde\xac\x12\x23\xee\xb6\x2b\x69\x66\x5a\x2c\x51\x83\x46\x5b\xe8\xcc\x80\x29\x92\x44\x2e\x25\x66\x16\x64\x96\x28\xbd\x75\x3d\x02\x89\x56\x5b\x10\x60\xc9\x19\xac\x82\x1c\x35\x6d\x7a\x8e\xf7\xc6\xee\x53\xa7\x72\x25\x8d\x30\x06\xb7\x8b\x74\xdf\xac\x7e\xaf\x56\x8c\x15\xcb\x6f\x31\xcc\xbf\xab\xdc\xc4\x30\x7f\x7c\x7e\x6c\x54\xab\x95\x2c\x2f\xcc\x06\x4d\x0c\xdf\xdb\x31\xb4\x1b\x10\xc4\x10\x34\x20\x74\x6b\xc7\xad\x91\x5b\xbb\x6e\xed\xb9\xf5\x83\x5b\xfb\x6e\x1d\xb8\x35\x68\xb3\x61\x74\xc0\x6e\x01\xfb\x05\xec\x18\xb0\x67\xc8\x9e\xa1\x8f\xc3\x81\x42\x8e\x14\x72\xa8\x90\x63\x85\xcc\xd2\x61\x97\x88\x59\x22\x66\xe9\x32\x4b\x97\x59\xba\xec\xd2\x65\x96\xae\x17\xdc\x75\xe7\xe9\x32\x4b\xf7\x03\x3f\x31\x4b\x97\x59\x7a\x7c\xe4\x1e\x03\x7a\xfe\x88\x0c\xe8\xb1\xf8\x1e\x03\x7a\x0c\xe8\x33\xa0\xcf\x61\xfb\x21\x3f\x75\xd8\x30\x4b\x9f\xc3\xf6\x7b\x6c\x38\x6c\x9f\x59\xfa\xcc\x32\x60\xf1\x83\xc0\xed\x0d\x38\xde\x80\xe3\x0d\x7c\x56\xcb\xb4\xfa\xbc\xb6\x7d\x62\xdb\xa1\xb7\x1d\x6f\x23\x6f\xbb\xde\xfa\xcc\xb7\x7d\xea\xdb\x3e\xf7\x6d\xcf\x77\xa8\x93\xe7\x0b\x3c\x5f\xe0\xf9\x02\xcf\x17\x78\xbe\xb2\x92\x65\x29\xcb\x5a\xfa\x62\x06\xbe\x9a\x81\x2f\x67\xe0\xeb\x19\xf8\x82\x06\xbe\xa2\x81\x2f\x69\xe0\x6b\x1a\x84\x9e\x2f\xec\xc7\x10\x92\x1d\xc4\xd0\x69\x40\xd0\x69\xc7\x10\x91\x0d\x62\xe8\x92\x0d\x63\xe8\x91\xed\xc4\xf0\x81\x6c\x14\x43\x9f\x6c\x37\x86\x01\x59\xe2\xa3\xae\xed\x10\x21\x31\x76\x48\x21\x51\x76\x48\x22\x71\x46\xa4\x91\x48\x23\x12\x49\xac\x11\xa9\x24\xda\x88\x64\x12\x6f\x14\xb1\x8e\xa8\xcb\x3a\xa2\x1e\xeb\x88\x3e\xb0\x0e\xea\x3e\x07\x18\xb0\x0e\xea\x3f\xd2\x41\x0d\x48\x3a\x5c\x07\x92\x0e\xd7\x83\xa4\xc3\x75\x21\x51\x52\x1f\x3a\x1d\xae\x13\x89\x94\x7a\xd1\xe9\x70\xdd\x48\xb4\xae\x1f\x89\xd7\x77\x64\xd0\x0b\xbc\x0d\xbd\xed\x78\x1b\x39\x1b\x46\xfe\x2b\x8a\xfc\x67\x14\xf9\xef\x28\xea\xf8\x7d\xef\xe7\x3e\x82\x67\xfa\xce\x5b\x2d\xd0\x68\x8a\xd4\xd2\xec\x97\xd9\x4e\x7d\xa3\xe9\xbc\xc1\x0c\x44\x9a\xba\x31\xa6\xf2\xa5\x5a\xa1\xe1\xf1\xb8\x40\xcc\x40\x5a\xd4\x82\xee\x07\xb5\x43\x4d\x17\x63\x39\x9a\x1c\x1d\x61\x12\x99\x89\xb4\x24\xf6\x23\x94\x06\x93\xcc\xd6\xcd\x6a\x85\xdf\xc7\x90\x14\xd9\x92\x46\x57\xad\x0e\xdf\x3d\x05\xd8\x8d\x34\x4d\x37\x92\xe6\xed\xc7\xa6\xca\xcd\x25\x94\x3a\x13\xf1\x9a\x4c\xa2\x16\x4b\x5b\x88\x14\xf0\x2f\x5c\x16\x6e\x16\xaa\x04\x44\xe6\x95\x43\xc2\xf3\xbe\xe2\xf0\x27\x51\x53\xb5\x6e\xc0\x6a\x41\xc1\xcb\x10\xc6\x62\x7e\x1a\x81\x6e\x0d\xdc\xa1\xde\x97\x5c\xee\x16\xa4\x90\xff\xf9\xe2\xc3\x21\x51\x13\xee\x55\xe6\x6a\xa5\xb2\x13\x1a\x12\x2d\xb6\x08\x57\xa7\xa7\x3b\xfe\xb7\x99\x62\xb6\xb6\x1b\x78\x0f\xc1\xe3\x65\xd5\x23\x50\x6b\xa5\xe1\x0a\x52\xb5\x6e\xae\xd1\x8e\xe8\xb1\x56\xbf\xac\x56\x2a\x32\x81\x9a\xdb\x65\xfa\x8a\xe3\x9e\x5f\xb8\x57\x17\x8f\x70\xc5\x50\xf2\x7c\x06\x4c\x0d\x02\x01\x3c\xcd\x47\xcc\xed\xa6\x56\x87\xab\x53\x29\x3e\xbe\xa7\x53\x39\x5d\x2a\x70\xc5\x4f\x15\x95\xc7\x40\xff\x88\x40\xe5\x4d\xab\x6e\x8b\xed\x02\x75\xad\xde\x70\xdb\x2b\x22\x84\x18\xce\xf9\x79\xaf\x2c\xf3\xfc\xd1\x3d\x3f\x93\x24\xa7\xde\x29\xa6\xda\x96\x27\xff\x1d\xda\x3e\xba\x3b\x7b\xae\x71\xa7\x72\xb8\x82\x83\xe3\xfc\x05\x84\x93\x45\x88\x44\xe9\x1a\xa1\x24\x5c\x41\xfb\x12\x24\xfc\xc6\x67\xf3\x37\xd8\x9c\xd9\x9a\x2a\x7f\xbc\x04\xf9\xee\x5d\xdd\x81\x2a\xfe\x2d\x6b\x6c\x92\xab\xcb\x11\x27\x24\x47\xfc\x56\x93\xf5\xa6\x55\x53\xab\x65\xb6\xae\x05\xbd\xba\xcb\x7d\xe5\x99\x16\xf3\x24\xed\x92\xfd\x5d\x4a\xbc\x53\xdd\x9f\x61\x29\x0c\xc2\xc5\xf5\xf0\xe6\xe6\x22\x86\xe3\xc3\xf5\xdd\xc7\xd1\x45\x7c\x38\xa4\xcc\x8c\xa5\xdf\xad\x5c\xe2\x93\xb8\x9d\x7a\x73\x27\xd2\x02\xef\x12\xae\xf7\xc1\x5d\xfe\x17\x5f\x7a\x47\x2f\xbc\xb9\x80\xf3\x8b\xb5\x30\xae\x1d\x7e\x00\xb4\xdf\x04\x58\xf5\x9a\x7f\x70\x9e\x86\x73\x88\x63\x7a\x0d\x15\x9e\xa0\x7e\xc0\xc8\x2c\x2f\xec\x01\xb3\xc5\xad\xd2\xfb\xa6\xa1\x5f\x3e\x35\x9f\x93\xc6\x21\x39\xef\xfc\xb9\x7f\xa0\x38\xf6\x7a\x56\xa4\xe9\xf9\x1e\xcf\x91\x37\x36\x55\xce\x39\x99\xfb\xde\x39\xf9\x08\x5c\x0b\xb0\x9f\x8f\xb6\xd0\x28\xbe\x5d\x1e\x2b\xfa\x71\x74\x33\xfa\x3c\x9c\x8d\xce\x2a\x3b\x9d\x0d\x67\xe3\x6b\x7e\xf5\xf3\xda\x86\xbf\x54\xdb\x97\x9d\x70\x3c\x87\x3b\x06\xbc\x68\xc1\xd7\x5b\xe0\x97\x7b\xe0\x97\x9a\xe0\x58\xd0\x7f\xa2\xa2\xff\xbf\xa4\xff\x74\x4d\x27\xa3\xd9\xc3\xe4\xf6\xa4\x74\xf4\xd7\xca\xdf\xf8\x66\xbc\xeb\xeb\x75\x0b\x5e\xb8\xf3\xf8\xf2\x57\xdc\x2b\x8d\xaf\x0a\xdb\x70\xa1\xdf\x95\xac\x6f\xe8\x9d\xce\xee\xee\x8f\xbd\xf7\x30\xbe\x1e\x1f\x86\xca\xcf\x62\xb4\x1b\xd0\x7e\x83\xf5\xdf\x0f\x5f\xee\x3f\x8e\xa6\x33\xcf\x54\x66\x36\x5f\x1e\x3e\xd3\x35\xda\xfb\xeb\xda\xc9\x0c\x94\x49\x39\xff\xa4\xb9\xa7\x34\x97\xd3\xef\x80\x4e\x31\x3b\xc0\xcf\x6e\x0e\x78\x0f\xed\xbf\xba\x78\xe4\x3a\x0e\xf7\x1f\x0b\xe6\x6f\x30\x47\x7c\xac\xeb\xd9\x45\x7a\x3c\xdd\xf9\x1d\xc4\xf8\x6a\xe5\xb9\xfa\x5c\xfd\x5f\x00\x00\x00\xff\xff\x3f\x73\xfe\xae\x59\x10\x00\x00")

func evmdis_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_evmdis_tracerJs,
		"evmdis_tracer.js",
	)
}

func evmdis_tracerJs() (*asset, error) {
	bytes, err := evmdis_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "evmdis_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb5, 0xc8, 0x73, 0x8e, 0xfb, 0x1f, 0x84, 0x7d, 0x37, 0xd9, 0x26, 0x24, 0x37, 0xb8, 0x65, 0xb1, 0xed, 0xa0, 0x76, 0x9a, 0xf0, 0x8e, 0x3a, 0x9b, 0x20, 0x93, 0x27, 0x26, 0x2e, 0xc9, 0x9b, 0xde}}
	return a, nil
}

var _noop_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x4f\x6f\xdb\x46\x10\xc5\xcf\xe6\xa7\x78\xc7\x04\x50\xc5\xfe\x39\x14\x70\x8a\x02\xac\x61\x27\x2a\x1c\xd9\x90\xe8\x06\x3e\x0e\xc9\xa1\xb8\xe9\x7a\x87\x9d\x9d\x95\x22\x18\xfe\xee\xc5\x92\x12\x92\x02\x69\xd3\x9b\xb0\xd2\xfb\xbd\x37\xf3\x46\x65\x89\x2b\x19\x8f\xea\x76\x83\xe1\xc7\xef\x7f\xf8\x19\xf5\xc0\xd8\xc9\x77\xa2\x14\x76\x8c\x2a\xd9\x20\x1a\x8b\xb2\x44\x3d\xb8\x88\xde\x79\x86\x8b\x18\x49\x0d\xd2\xc3\xfe\xf1\x6b\xef\x1a\x25\x3d\x2e\x8b\xb2\x9c\x15\x5f\xf9\x32\xab\x7b\x65\x46\x94\xde\x0e\xa4\x7c\x89\xa3\x24\xb4\x14\xa0\xdc\xb9\x68\xea\x9a\x64\x0c\x67\xa0\xd0\x95\xa2\x78\x92\xce\xf5\xc7\x0c\x74\x86\x14\x3a\xd6\xc9\xd6\x58\x9f\xe2\x39\xc3\xdb\xf5\x03\x6e\x39\x46\x56\xbc\xe5\xc0\x4a\x1e\xf7\xa9\xf1\xae\xc5\xad\x6b\x39\x44\x06\x45\x8c\xf9\x25\x0e\xdc\xa1\x99\x70\x59\x78\x93\xa3\x6c\x4f\x51\x70\x23\x29\x74\x64\x4e\xc2\x02\xec\x6c\x60\xc5\x9e\x35\x3a\x09\xf8\xe9\x6c\x75\x02\x2e\x20\x9a\x21\xaf\xc8\xf2\x00\x0a\x19\xb3\xee\x35\x28\x1c\xe1\xc9\x3e\x4b\xbf\xb9\x8e\xcf\x53\x77\x70\x61\x32\x19\x64\x64\xd8\x40\x96\x67\x3e\x38\xef\xd1\x30\x52\xe4\x3e\xf9\x45\x66\x35\xc9\xf0\x61\x55\xbf\xbb\x7b\xa8\x51\xad\x1f\xf1\xa1\xda\x6c\xaa\x75\xfd\xf8\x06\x07\x67\x83\x24\x03\xef\x79\x46\xb9\xa7\xd1\x3b\xee\x70\x20\x55\x0a\x76\x84\xf4\x99\xf0\xfe\x7a\x73\xf5\xae\x5a\xd7\xd5\x6f\xab\xdb\x55\xfd\x08\x51\xdc\xac\xea\xf5\xf5\x76\x8b\x9b\xbb\x0d\x2a\xdc\x57\x9b\x7a\x75\xf5\x70\x5b\x6d\x70\xff\xb0\xb9\xbf\xdb\x5e\x2f\xb1\xe5\x9c\x8a\xb3\xfe\xdb\x1b\xef\xa7\xee\x94\xd1\xb1\x91\xf3\xf1\xbc\x87\x47\x49\x88\x83\x24\xdf\x61\xa0\x3d\x43\xb9\x65\xb7\xe7\x0e\x84\x56\xc6\xe3\xff\xae\x34\xb3\xc8\x4b\xd8\x4d\x33\xff\xcb\x29\x62\xd5\x23\x88\x2d\x10\x99\xf1\xcb\x60\x36\x5e\x96\xe5\xe1\x70\x58\xee\x42\x5a\x8a\xee\x4a\x3f\xc3\x62\xf9\xeb\xb2\xc8\xc4\x20\x32\xd6\x4a\x2d\x6b\xae\xe6\x63\x8a\x36\x91\x1b\x52\x6e\x24\x30\x1a\x71\x9e\x75\xcc\x0d\xa3\x95\x2e\xc7\xff\x2b\x39\xe5\x0e\xbd\xca\x13\x08\xbf\xd3\x9e\xb6\xad\xba\xd1\x32\x4e\x9a\x8f\xdc\x1a\x4c\xe6\x02\xa9\xf1\xd3\x29\x12\x4c\x29\x44\x6a\xf3\xcd\xe4\xcf\x2d\xeb\xb2\x78\x2e\x2e\xca\x12\xd1\x78\xcc\xde\x2e\xec\xe5\xcf\xcc\x15\xcd\x6d\xea\x11\x32\x4e\x8e\xd3\x5d\xe4\x50\x7f\xbc\x07\x7f\xe2\x36\x19\xc7\x65\x71\x91\x75\x97\xe8\x53\x98\xa0\xaf\xbc\xec\x16\xe8\x9a\xd7\x78\xc6\xcb\xa2\x98\xc8\x3d\x25\x6f\x5f\xa2\x0f\xc3\xe9\x48\xa8\xb5\x44\xfe\x44\xcb\x91\xa4\x07\x85\xb3\x61\x3f\xd7\x77\x31\xe9\xff\xdb\x42\x39\x7e\xcd\x83\xbc\x9f\x7c\x66\x60\x9c\x8b\x6f\x98\x03\x9c\xb1\x52\xbe\x7c\xd9\xb3\xe6\xbf\x3c\x94\x2d\x69\x88\x13\x2e\x6b\x7a\x17\xc8\x9f\xc1\xa7\xe3\xc8\x1b\x73\x61\xb7\x2c\x2e\xe6\xf7\x2f\x42\xb5\xf6\xe9\x1c\x6a\x26\xe1\xf9\xe5\x0d\x5e\x8a\x97\xe2\xef\x00\x00\x00\xff\xff\x19\xcb\x8f\xe9\xed\x04\x00\x00")

func noop_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_noop_tracerJs,
		"noop_tracer.js",
	)
}

func noop_tracerJs() (*asset, error) {
	bytes, err := noop_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "noop_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe3, 0xf, 0x1c, 0x6f, 0x65, 0xaf, 0x90, 0x31, 0xab, 0xf, 0xe0, 0xca, 0x54, 0x7, 0xfd, 0xd3, 0xa1, 0x4a, 0x14, 0x1, 0x2a, 0x9d, 0xdc, 0xb9, 0x64, 0x69, 0x83, 0x30, 0xb1, 0x2a, 0xbd, 0xfb}}
	return a, nil
}

var _opcount_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x5f\x6f\xdb\x36\x14\xc5\x9f\xad\x4f\x71\x1e\x5b\xd4\x93\xba\xed\x61\x40\x36\x0c\xd0\x82\xa4\x35\x90\x38\x81\xad\xb4\xc8\x23\x25\x5d\x59\x5c\x69\x52\xb8\xbc\xb4\x2a\x14\xf9\xee\x03\x29\x6b\xcd\x86\x0c\xd9\x2b\x7d\xcf\xef\xdc\x3f\xc7\x2a\x0a\x5c\xba\x61\x62\x7d\xe8\x05\x3f\xbd\xff\xf1\x17\x54\x3d\xe1\xe0\x7e\x70\xac\xec\x81\x50\x06\xe9\x1d\xfb\xac\x28\x50\xf5\xda\xa3\xd3\x86\xa0\x3d\x06\xc5\x02\xd7\x41\xfe\x51\x6d\x74\xcd\x8a\xa7\x3c\x2b\x8a\x59\xf1\xc2\x8f\x51\xdd\x31\x11\xbc\xeb\x64\x54\x4c\x17\x98\x5c\x40\xa3\x2c\x98\x5a\xed\x85\x75\x1d\x84\xa0\x05\xca\xb6\x85\x63\x1c\x5d\xab\xbb\x29\x02\xb5\x20\xd8\x96\x38\xd9\x0a\xf1\xd1\x2f\x3d\x7c\xd8\x3e\xe0\x86\xbc\x27\xc6\x07\xb2\xc4\xca\xe0\x3e\xd4\x46\x37\xb8\xd1\x0d\x59\x4f\x50\x1e\x43\x7c\xf1\x3d\xb5\xa8\x13\x2e\x0a\xaf\x63\x2b\xfb\x73\x2b\xb8\x76\xc1\xb6\x4a\xb4\xb3\x6b\x90\x96\x9e\x18\x27\x62\xaf\x9d\xc5\xcf\x8b\xd5\x19\xb8\x86\xe3\x08\x79\xa3\x24\x0e\xc0\x70\x43\xd4\xbd\x85\xb2\x13\x8c\x92\xef\xd2\x57\xd7\xf1\x7d\xea\x16\xda\x26\x93\xde\x0d\x04\xe9\x95\xc4\x99\x47\x6d\x0c\x6a\x42\xf0\xd4\x05\xb3\x8e\xac\x3a\x08\x3e\x6f\xaa\x8f\x77\x0f\x15\xca\xed\x23\x3e\x97\xbb\x5d\xb9\xad\x1e\x7f\xc5\xa8\xa5\x77\x41\x40\x27\x9a\x51\xfa\x38\x18\x4d\x2d\x46\xc5\xac\xac\x4c\x70\x5d\x24\xdc\x5e\xed\x2e\x3f\x96\xdb\xaa\xfc\x63\x73\xb3\xa9\x1e\xe1\x18\xd7\x9b\x6a\x7b\xb5\xdf\xe3\xfa\x6e\x87\x12\xf7\xe5\xae\xda\x5c\x3e\xdc\x94\x3b\xdc\x3f\xec\xee\xef\xf6\x57\x39\xf6\x14\xbb\xa2\xa8\x7f\x7d\xe3\x5d\xba\x1d\x13\x5a\x12\xa5\x8d\x5f\xf6\xf0\xe8\x02\x7c\xef\x82\x69\xd1\xab\x13\x81\xa9\x21\x7d\xa2\x16\x0a\x8d\x1b\xa6\xff\x7d\xd2\xc8\x52\xc6\xd9\x43\x9a\xf9\x3f\xa2\x88\x4d\x07\xeb\x64\x0d\x4f\x84\xdf\x7a\x91\xe1\xa2\x28\xc6\x71\xcc\x0f\x36\xe4\x8e\x0f\x85\x99\x61\xbe\xf8\x3d\xcf\x22\xd1\x0d\x8d\x0b\x56\x2a\x56\x0d\x71\xbc\x8e\x82\x57\xc7\xc1\x10\x64\x7e\x4a\x57\xf9\x33\x78\x41\x2a\xf4\xc9\xd8\x86\x63\x4d\x1c\x5b\xd7\xd6\x0b\x87\x26\x66\x21\xfd\x6d\xe8\x2b\x35\xe9\xb2\xf5\x94\x2a\xaf\x3e\xdd\xa2\xa6\x2e\xee\x25\xa5\x98\x95\xf5\x2a\x95\xa7\x44\x6b\xab\x84\xda\x3c\xfb\x96\xad\x8a\x62\x76\x48\xc6\x5f\xfe\xed\x13\x39\xcf\xbd\xfe\x36\xca\xb3\x55\x92\x5d\xe0\xfd\x3a\x4b\x14\x2f\x34\xc4\x49\xb4\x3d\xb9\x2f\xd4\xa6\xc3\xd0\x89\x78\x4a\xc3\xb6\xe7\xa0\x45\xfc\xa7\xdb\x05\xe3\xf3\x6c\x15\x75\x17\xe8\x82\x4d\x0e\x6f\x8c\x3b\xac\xd1\xd6\x6f\xf1\x0d\xd2\x6b\x9f\x27\x97\x77\xef\xf0\x74\xb6\xe9\x54\x30\xf2\xdc\x67\xec\xcf\x11\x54\x8d\x04\x65\xce\xe8\x38\xa9\xeb\xa0\xec\xe2\xde\xcd\xe1\x58\x25\xfd\xcb\x7e\x8b\x05\x93\x7f\xc9\x43\x19\x93\x7c\x66\xa0\x9f\x63\x55\x13\x59\x68\x21\x8e\x0b\x85\x3b\x11\xc7\x0f\x0a\x98\x24\xb0\xf5\x09\x17\x35\x9d\xb6\xca\x2c\xe0\x73\xf4\xe2\xc2\xb5\x3d\xe4\xd9\x6a\x7e\x7f\xd6\x54\x23\x5f\x97\xa6\x66\xd2\xb3\x5d\xe0\x29\x7b\xca\xfe\x0a\x00\x00\xff\xff\xa1\x61\x9e\x6e\x52\x05\x00\x00")

func opcount_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_opcount_tracerJs,
		"opcount_tracer.js",
	)
}

func opcount_tracerJs() (*asset, error) {
	bytes, err := opcount_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "opcount_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x27, 0xe, 0x97, 0x88, 0x9b, 0x53, 0xbb, 0x20, 0x44, 0xd8, 0xf5, 0xeb, 0x41, 0xd2, 0x7e, 0xd6, 0xda, 0x6b, 0xf5, 0xaf, 0x0, 0x75, 0x9f, 0xd9, 0x22, 0xc, 0x6e, 0x74, 0xac, 0x2a, 0xa9, 0xa7}}
	return a, nil
}

var _prestate_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x57\xdd\x6f\xdb\x38\x12\x7f\xb6\xfe\x8a\x41\x5f\x6c\x5d\x5d\xb9\xcd\x02\x7b\x80\x73\x39\x40\x75\xdd\x36\x40\x36\x09\x6c\xe7\x72\xb9\xc5\x3e\x50\xe4\x48\xe6\x9a\x26\x05\x92\xb2\xe3\x2b\xf2\xbf\x1f\x86\xfa\xf0\x47\x93\xa6\x7b\x6f\x16\x39\xfc\xcd\xf7\x6f\xc6\xa3\x11\x4c\x4c\xb9\xb3\xb2\x58\x7a\x38\x7b\xff\xe1\xef\xb0\x58\x22\x14\xe6\x9d\xb1\x4c\x17\x08\x69\xe5\x97\xc6\xba\x68\x34\x82\xc5\x52\x3a\xc8\xa5\x42\x90\x0e\x4a\x66\x3d\x98\x1c\xfc\x91\xb4\x92\x99\x65\x76\x97\x44\xa3\x51\xfd\xe2\x99\x4b\x7a\x9d\x5b\x44\x70\x26\xf7\x5b\x66\x71\x0c\x3b\x53\x01\x67\x1a\x2c\x0a\xe9\xbc\x95\x59\xe5\x11\xa4\x07\xa6\xc5\xc8\x58\x58\x1b\x21\xf3\x1d\x01\x4a\x0f\x95\x16\x68\x83\x5a\x8f\x76\xed\x5a\x1b\xbe\x5c\xdf\xc1\x15\x3a\x87\x16\xbe\xa0\x46\xcb\x14\xdc\x56\x99\x92\x1c\xae\x24\x47\xed\x10\x98\x83\x92\x4e\xdc\x12\x05\x64\x01\x8e\x1e\x7e\x26\x53\xe6\x8d\x29\xf0\xd9\x54\x5a\x30\x2f\x8d\x1e\x02\x4a\xbf\x44\x0b\x1b\xb4\x4e\x1a\x0d\xbf\xb4\xaa\x1a\xc0\x21\x18\x4b\x20\x03\xe6\xc9\x01\x0b\xa6\xa4\x77\x31\x30\xbd\x03\xc5\xfc\xfe\xe9\xab\xe1\xd8\x7b\x2d\x40\xea\xa0\x64\x69\x4a\x04\xbf\x64\x9e\x7c\xde\x4a\xa5\x20\x43\xa8\x1c\xe6\x95\x1a\x12\x56\x56\x79\xb8\xbf\x5c\x7c\xbd\xb9\x5b\x40\x7a\xfd\x00\xf7\xe9\x6c\x96\x5e\x2f\x1e\xce\x61\x2b\xfd\xd2\x54\x1e\x70\x83\x35\x94\x5c\x97\x4a\xa2\x80\x2d\xb3\x96\x69\xbf\x03\x93\x13\xc2\x6f\xd3\xd9\xe4\x6b\x7a\xbd\x48\x3f\x5e\x5e\x5d\x2e\x1e\xc0\x58\xf8\x7c\xb9\xb8\x9e\xce\xe7\xf0\xf9\x66\x06\x29\xdc\xa6\xb3\xc5\xe5\xe4\xee\x2a\x9d\xc1\xed\xdd\xec\xf6\x66\x3e\x4d\x60\x8e\x64\x15\xd2\xfb\xd7\x23\x9e\x87\xdc\x59\x04\x81\x9e\x49\xe5\xda\x38\x3c\x98\x0a\xdc\xd2\x54\x4a\xc0\x92\x6d\x10\x2c\x72\x94\x1b\x14\xc0\x80\x9b\x72\xf7\xd3\x29\x25\x2c\xa6\x8c\x2e\x82\xcf\x2f\x94\x22\x5c\xe6\xa0\x8d\x1f\x82\x43\x84\x7f\x2c\xbd\x2f\xc7\xa3\xd1\x76\xbb\x4d\x0a\x5d\x25\xc6\x16\x23\x55\x83\xb9\xd1\x3f\x93\x88\x10\x4b\x8b\xce\x33\x8f\x0b\xcb\x38\x5a\x30\x95\x2f\x2b\xef\xc0\x55\x79\x2e\xb9\x44\xed\x41\xea\xdc\xd8\x75\xa8\x12\xf0\x06\xb8\x45\xe6\x11\x18\x28\xc3\x99\x02\x7c\x44\x5e\x85\xbb\x3a\xce\xa1\x54\x2d\xd3\x8e\xf1\x70\x9a\x5b\xb3\x26\x4f\x2b\xe7\xe9\x87\x73\xb8\xce\x14\x0a\x28\x50\xa3\x93\x0e\x32\x65\xf8\x2a\x89\xbe\x45\xbd\x03\x63\xa8\x4a\x82\x7f\x8d\x50\xa8\x8c\x2d\xf6\x2d\x42\x56\x49\x25\xa4\x2e\x92\xa8\xd7\x4a\x8f\x41\x57\x4a\x0d\xa3\x00\xa1\x8c\x59\x55\x65\xca\xb9\xa9\x82\xed\x7f\x22\xf7\x35\x98\x2b\x91\xcb\x9c\x4a\x83\x75\xb7\xde\x84\xab\x4e\xaf\xc9\x48\x3e\x89\x7a\x47\x30\x63\xc8\x2b\x1d\xdc\x19\x30\x21\xec\x10\x44\x16\x7f\x8b\x7a\xbd\x0d\xb3\x84\x05\x17\xe0\xcd\x57\x7c\x0c\x97\xf1\x79\xd4\xeb\xc9\x1c\x06\x7e\x29\x5d\xd2\x02\xff\xce\x38\xff\x03\x2e\x2e\x2e\x42\x43\xe7\x52\xa3\x88\x81\x20\x7a\xcf\x89\xd5\x37\xbd\x8c\x29\xa6\x39\x8e\xa1\xff\xfe\xb1\x0f\x6f\x41\x64\x49\x81\xfe\x63\x7d\x5a\x2b\x4b\xbc\x99\x7b\x2b\x75\x31\xf8\xf0\x6b\x3c\x0c\xaf\xb4\x09\x6f\xa0\x11\xbf\x36\x9d\x70\x7d\xcf\x8d\x08\xd7\x8d\xcd\xb5\xd4\xc4\x88\x46\xa8\x91\x72\xde\x58\x56\xe0\x18\xbe\x3d\xd1\xf7\x13\x79\xf5\x14\xf5\x9e\x8e\xa2\x3c\xaf\x85\x5e\x88\x72\x03\x01\xa8\xbd\xed\xaa\xbc\x90\xd4\xa7\x87\x09\x08\x78\x3f\x4a\xc2\xbc\x35\xe5\x24\x09\x2b\xdc\xbd\x9e\x09\xba\x90\xe2\xb1\xbb\x58\xe1\x2e\x3e\x8f\x5e\x4c\x51\xd2\x18\xfd\xbb\x14\x8f\x3f\x9b\xaf\x93\x37\x47\x71\x9d\x93\xd4\xde\xde\x38\x3e\x89\xa3\x45\x57\x29\x4f\xe5\x2e\xf5\xc6\xac\x88\xb6\x96\x14\x1f\xa5\x42\x48\x4c\x49\xd9\x72\x35\x6f\x64\x88\x1a\xa4\x47\xcb\x88\x38\xcd\x06\x2d\x4d\x0c\xb0\xe8\x2b\xab\x5d\x17\xc6\x5c\x6a\xa6\x5a\xe0\x26\xea\xde\x32\x5e\xf7\x4c\x7d\x7e\x10\x4b\xee\x1f\x43\x14\x83\x77\xa3\x11\xa4\x1e\xc8\x45\x28\x8d\xd4\x7e\x08\x5b\x04\x8d\x28\xa8\xf1\x05\x8a\x8a\xfb\x80\xd7\xdf\x30\x55\x61\xbf\x6e\x6e\x22\xc8\xf0\xd4\x54\x34\x05\x0e\x9a\x7f\x18\x0c\x5c\x9b\x4d\x18\x6f\x19\xe3\x2b\x68\x1a\xce\x58\x59\x48\x1d\x35\xe1\x3c\x6a\x36\xb2\x28\x21\xe0\x60\x56\xc8\x15\x25\x91\x4e\x3e\x32\x05\x17\x90\xc9\xe2\x52\xfb\x93\xe4\xd5\x41\x6f\x9f\xc6\x7f\x24\x4d\xf3\x24\x8e\x08\x6f\x70\x16\x0f\xe1\xc3\xaf\x5d\x45\x78\x43\x50\xf0\x3a\x98\x37\x2f\x43\x45\xa7\xc5\xf0\xfc\xb3\xa0\x86\x3a\xf8\x6d\xd0\x9a\xb8\x2a\xa3\x74\xd4\x7e\x86\x38\x1e\x77\xf1\xf9\x0f\x70\x8f\x7d\x6b\x71\x9b\xd0\x24\x4c\x88\x43\x50\xfa\x0c\xdf\x05\x73\x77\x0e\x05\xbc\x05\xfa\x92\x9a\x54\x39\xc9\xbf\x30\x17\xc3\xdf\xa0\x91\xb8\xb5\x92\x7f\x67\x49\x9d\xd7\x4f\xc8\x2d\xae\x69\x14\x50\xea\x38\x53\x0a\x6d\xdf\x41\x20\x9a\x61\x53\x83\x21\xc9\xb8\x2e\xfd\xae\x1d\x10\x9e\xd9\x02\xbd\x7b\xdd\x9b\x80\xf3\xee\x5d\xcb\x9b\x21\x7e\xbb\x12\xe1\xe2\x02\xfa\x93\xd9\x34\x5d\x4c\xfb\x4d\xef\x8d\x46\x70\x8f\x61\x75\xca\x94\xcc\x84\xda\x81\x40\x85\x1e\x6b\xbb\x8c\x0e\x71\xed\x78\x64\x48\x3b\x10\x6d\x27\xf8\x28\x9d\x97\xba\x80\x9a\x5e\xb6\x34\x8a\x1b\xb8\xd0\x58\x9c\x55\x14\x9e\xd3\xc9\xe5\x0d\x2d\x21\x16\x89\x8c\x68\x68\x84\x1e\x65\x4a\x76\x4b\x4b\x2e\xad\xf3\x50\x2a\xc6\x31\x21\xbc\xce\x98\x97\x8b\xa2\x69\x7f\x52\x3d\x0b\x7d\x1b\x80\xf6\x53\x91\x29\x9a\xaa\xa4\xde\xc1\xa0\xc5\x88\xa3\x5e\xcf\xb6\xd2\x07\xd8\xe7\x7b\x1e\x71\x1e\xcb\x43\x16\xa1\x5d\x04\x37\x48\xbc\x1b\x28\xa4\x9e\xa0\xa4\xeb\x5f\xbf\x35\x23\x1b\x5d\x12\xf5\xe8\xdd\x01\x19\x28\x53\x1c\x93\x81\xa8\xc3\xc2\x2b\x6b\x29\xff\x1d\x6f\xe7\x44\x0c\x7f\x56\xce\x53\x4c\x2d\x85\xa7\xa1\x98\xe7\x98\x35\xf0\x28\x8d\xe8\xf8\x7b\x06\xa5\x61\x17\x86\x0b\xa9\x6b\x46\x5b\xbd\x00\x96\xc6\xa3\xf6\x92\x29\xb5\xa3\x3c\x6c\x2d\x6d\x3e\x4b\xb4\x38\x04\x27\x49\x2a\xd0\x54\x10\x95\x9a\xab\x4a\xd4\x65\x10\x8a\xbf\xc1\x73\xc1\xe6\xe3\x95\x69\x8d\xce\xb1\x02\x13\xaa\xa4\x5c\x3e\x36\x4b\xa7\x86\x7e\xcd\x8c\x83\xb8\x9f\x74\x46\x1e\xf3\x92\x32\x45\xd2\x16\x19\x71\x7b\x2a\x84\x45\xe7\x06\x71\x43\x54\x5d\x66\xef\x97\xa8\x29\xf8\xa0\x71\x0b\xdd\x3e\xc3\x38\xa7\xed\x4e\x0c\x81\x09\x41\x7c\x78\xb2\x7b\x44\xbd\x9e\xdb\x4a\xcf\x97\x10\x34\x99\x72\xdf\x8b\x71\x53\xff\x9c\x39\x84\x37\xd3\x7f\x2f\x26\x37\x9f\xa6\x93\x9b\xdb\x87\x37\x63\x38\x3a\x9b\x5f\xfe\x67\xda\x9d\x7d\x4c\xaf\xd2\xeb\xc9\xf4\xcd\x38\x0c\xf4\x67\x1c\xf2\xa6\x75\x81\x14\x3a\xcf\xf8\x2a\x29\x11\x57\x83\xf7\xc7\x3c\xb0\x77\xb0\xd7\xcb\x2c\xb2\xd5\xf9\xde\x98\xba\x41\x1b\x1d\x2d\x4f\xc3\x05\xbc\x18\xac\xf3\x97\xad\x99\x34\xf2\x83\x96\xfd\xf7\xfb\x4b\xa0\x8a\xd7\xed\x38\xfb\xcb\x86\x84\xde\x61\x7c\x35\x06\xc7\x14\xad\xcd\xf2\xbf\xf4\x57\x27\xcf\x1d\xfa\x21\xa0\x16\x66\x4b\xcc\xd7\xa1\xd6\x37\x0d\xee\x41\xc8\x3e\xc4\x35\xed\xde\xe4\x83\xb8\x13\x26\xb0\xef\x45\xcf\x9e\x13\x45\x2d\xe0\xa2\x45\x7f\x1b\x5e\xbe\x1e\xa8\xb3\x26\x52\x27\x0a\x7e\x39\x59\x0b\xc3\xfd\x1a\xd7\xc6\xee\x9a\x19\x76\xe0\xdf\x8f\xa3\x9a\x5e\x5d\x75\xf5\x44\x1f\x54\x64\xdd\xc1\xa7\xe9\xd5\xf4\x4b\xba\x98\x1e\x49\xcd\x17\xe9\xe2\x72\x52\x1f\xfd\xe5\xc2\xfb\xf0\xd3\x85\xd7\x9f\xcf\x17\x37\xb3\x69\x7f\xdc\x7c\x5d\xdd\xa4\x9f\xfa\xdf\x29\x6c\x56\xc7\x1f\xb5\xae\x37\xf7\xc6\x8a\xff\xa7\x03\x0e\xd6\xb8\x9c\x3d\xb7\xc5\x05\x6a\xe7\xbe\x3a\xf9\x97\x04\x4c\xb7\xac\x9c\xd7\xff\x13\x7b\xe1\xfd\xb3\x3c\xfc\x14\x3d\x45\xff\x0b\x00\x00\xff\xff\x94\xbf\x6c\x94\xb5\x10\x00\x00")

func prestate_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_prestate_tracerJs,
		"prestate_tracer.js",
	)
}

func prestate_tracerJs() (*asset, error) {
	bytes, err := prestate_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "prestate_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd4, 0x9, 0xf9, 0x44, 0x13, 0x31, 0x89, 0xf7, 0x35, 0x9a, 0xc6, 0xf0, 0x86, 0x9d, 0xb2, 0xe3, 0x57, 0xe2, 0xc0, 0xde, 0xc9, 0x3a, 0x4c, 0x4a, 0x94, 0x90, 0xa5, 0x92, 0x2f, 0xbf, 0xc0, 0xb8}}
	return a, nil
}

var _trigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x4f\x6f\xe3\x36\x10\xc5\xef\xfe\x14\xaf\x27\x27\x88\xd7\x4a\xda\x4b\xe1\xd4\x05\xdc\x6c\xb2\x6b\x20\x6b\x07\xb6\xd3\x45\x10\xe4\x40\x4b\x23\x89\x08\x4d\x0a\xc3\x91\xbd\x42\x90\xef\x5e\x50\x92\xff\x05\x6e\xb7\x3e\x19\x9c\x79\xbf\x79\x33\x1c\x31\x8a\x70\xe3\x8a\x8a\x75\x96\x0b\x7e\xbd\xbc\xfa\x1d\x8b\x9c\x90\xb9\x4f\x8e\x95\xcd\x08\xa3\x52\x72\xc7\xbe\x13\x45\x58\xe4\xda\x23\xd5\x86\xa0\x3d\x0a\xc5\x02\x97\x42\x8e\xb2\x8d\x5e\xb2\xe2\xaa\xdf\x89\xa2\x46\x71\x22\x18\xd4\x29\x13\xc1\xbb\x54\x36\x8a\x69\x80\xca\x95\x88\x95\x05\x53\xa2\xbd\xb0\x5e\x96\x42\xd0\x02\x65\x93\xc8\x31\x56\x2e\xd1\x69\x15\x80\x5a\x50\xda\x84\xb8\x2e\x2b\xc4\x2b\xbf\xf5\xf0\x65\xf2\x88\x7b\xf2\x9e\x18\x5f\xc8\x12\x2b\x83\x87\x72\x69\x74\x8c\x7b\x1d\x93\xf5\x04\xe5\x51\x84\x13\x9f\x53\x82\x65\x8d\x0b\xc2\xbb\x60\x65\xde\x5a\xc1\x9d\x2b\x6d\xa2\x44\x3b\xdb\x03\x69\xc9\x89\xb1\x26\xf6\xda\x59\xfc\xb6\x2d\xd5\x02\x7b\x70\x1c\x20\x67\x4a\x42\x03\x0c\x57\x04\xdd\x39\x94\xad\x60\x94\xec\xa5\x3f\x1d\xc7\xbe\xeb\x04\xda\xd6\x45\x72\x57\x10\x24\x57\x12\x7a\xde\x68\x63\xb0\x24\x94\x9e\xd2\xd2\xf4\x02\x6b\x59\x0a\xbe\x8f\x17\x5f\xa7\x8f\x0b\x8c\x26\x4f\xf8\x3e\x9a\xcd\x46\x93\xc5\xd3\x35\x36\x5a\x72\x57\x0a\x68\x4d\x0d\x4a\xaf\x0a\xa3\x29\xc1\x46\x31\x2b\x2b\x15\x5c\x1a\x08\xdf\x6e\x67\x37\x5f\x47\x93\xc5\xe8\xaf\xf1\xfd\x78\xf1\x04\xc7\xb8\x1b\x2f\x26\xb7\xf3\x39\xee\xa6\x33\x8c\xf0\x30\x9a\x2d\xc6\x37\x8f\xf7\xa3\x19\x1e\x1e\x67\x0f\xd3\xf9\x6d\x1f\x73\x0a\xae\x28\xe8\x7f\x3e\xf1\xb4\xbe\x3b\x26\x24\x24\x4a\x1b\xbf\x9d\xc3\x93\x2b\xe1\x73\x57\x9a\x04\xb9\x5a\x13\x98\x62\xd2\x6b\x4a\xa0\x10\xbb\xa2\xfa\xdf\x57\x1a\x58\xca\x38\x9b\xd5\x3d\xff\xcb\x2a\x62\x9c\xc2\x3a\xe9\xc1\x13\xe1\x8f\x5c\xa4\x18\x44\xd1\x66\xb3\xe9\x67\xb6\xec\x3b\xce\x22\xd3\xc0\x7c\xf4\x67\xbf\xd3\x79\xeb\x00\x40\x14\x21\xd7\x5e\xc2\xd5\x04\xe8\x4a\x15\xb5\x27\xd6\x19\xab\x15\x62\x57\x5a\x21\xf6\x75\x6a\xc8\x1b\xe0\xed\xbd\xb7\x15\x1a\xe5\x65\x5a\x04\x69\xf8\x07\x57\x10\xd7\xfb\x54\xc7\x9b\xa0\x1f\xe0\xb9\xdb\xed\x75\xbb\x2f\xbd\xdd\xe9\x67\x2a\x24\x1f\xe0\xb2\x39\x69\x59\x5e\xa8\x26\x69\xbb\x76\xaf\x94\xd4\x03\xa5\x35\x71\x05\x57\xc4\x2e\x69\x17\x24\x58\xfc\xfb\x1b\xe8\x07\xc5\xa5\x90\xef\xd7\x84\x20\x1d\x20\x2d\x6d\x1c\x8a\x9f\x19\x97\xf5\x90\x2c\xcf\xf1\xb6\xe3\xaf\x15\x23\x09\x55\x31\x84\x71\x59\x3f\xa3\xc6\xc4\xd9\xf9\xf5\x2e\x47\xa7\x38\x6b\x72\x7e\x19\x42\x72\xed\xfb\x3b\xaf\xe7\x7b\x52\xf8\xed\x82\xd3\xc2\x63\xb8\xed\xef\xfa\x74\xce\xe7\xb6\x6c\x8d\x3e\xce\x61\x92\x92\xed\xfe\xec\xfd\xc8\xaf\x2b\x5a\xb3\xae\xe8\x8b\x9b\x0b\x6b\x9b\x1d\xfa\x0d\x39\xaf\x54\x61\x78\xe4\xe7\xf9\xf2\xe5\xa2\xfb\xa9\x7b\x71\x74\x76\xd5\x9c\xb9\xe2\xb8\xdb\x3a\x27\x5c\xea\xf3\x2b\x55\x2f\xa7\x9a\xdc\x05\x2f\x2e\x4e\xd9\x24\xe3\x09\xff\x25\xc3\x10\x57\xa7\x84\x1f\x1c\x7f\xec\xe1\xea\x60\x98\x1f\x02\x18\x62\xdb\xc6\x7e\x0f\x53\x55\x1a\x39\x5c\x9e\x4d\xde\xbe\x07\x2a\x96\x52\x99\x76\x5f\xc2\xcb\xe6\x52\x28\xbb\x5d\xa9\xb4\xf9\x52\x03\xa5\x46\x9c\x5c\xa2\x7d\x19\x26\x7f\xaa\x8e\x32\xa6\xae\xd5\x40\x7d\xf3\x9d\x2f\x89\x2c\xb4\x84\x0f\x82\x12\xb8\x35\x71\x78\xe1\xdb\x2b\xf7\x5b\x62\x90\xa5\xda\x2a\xb3\x65\xb7\xcf\x81\xb0\x8a\xb5\xcd\x1a\x6b\x4d\xe8\xc0\x5b\x2c\x3f\x0e\x97\xbb\x61\xee\x27\xbf\x9b\xce\x7b\xe7\x9f\x00\x00\x00\xff\xff\x01\x1a\x0b\xf3\xf2\x06\x00\x00")

func trigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_trigram_tracerJs,
		"trigram_tracer.js",
	)
}

func trigram_tracerJs() (*asset, error) {
	bytes, err := trigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x40, 0x63, 0xe1, 0x42, 0x60, 0x7, 0x1b, 0x79, 0x47, 0x1, 0xa1, 0xbf, 0xc4, 0x66, 0x19, 0x9b, 0x2b, 0x5a, 0x1f, 0x82, 0x3d, 0xcf, 0xee, 0xe7, 0x60, 0x25, 0x2c, 0x4f, 0x13, 0x97, 0xc7, 0x18}}
	return a, nil
}

var _unigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x41\x6f\xdb\xc6\x13\xc5\xef\xfa\x14\xef\x68\x23\xfa\x8b\xc9\xbf\x97\x42\x69\x0a\xb0\x86\x9d\x08\x70\x64\x43\xa2\x1b\x18\x45\x0f\x4b\x72\x48\x2e\xba\xda\x21\x66\x67\xa5\x08\x81\xbf\x7b\xb1\xa4\x68\x39\x80\xdb\x94\x27\x41\x33\xef\x37\x33\x6f\x86\xcc\x32\x5c\x71\x7f\x14\xdb\x76\x8a\xff\xbf\x7d\xf7\x33\x8a\x8e\xd0\xf2\xff\x58\x8c\x6f\x09\x79\xd4\x8e\x25\xcc\xb2\x0c\x45\x67\x03\x1a\xeb\x08\x36\xa0\x37\xa2\xe0\x06\xfa\x5d\xb6\xb3\xa5\x18\x39\x2e\x66\x59\x36\x2a\x5e\x09\x26\x75\x23\x44\x08\xdc\xe8\xc1\x08\x2d\x71\xe4\x88\xca\x78\x08\xd5\x36\xa8\xd8\x32\x2a\xc1\x2a\x8c\xaf\x33\x16\xec\xb8\xb6\xcd\x31\x01\xad\x22\xfa\x9a\x64\x28\xab\x24\xbb\x30\xf5\xf0\x71\xfd\x80\x5b\x0a\x81\x04\x1f\xc9\x93\x18\x87\xfb\x58\x3a\x5b\xe1\xd6\x56\xe4\x03\xc1\x04\xf4\xe9\x9f\xd0\x51\x8d\x72\xc0\x25\xe1\x4d\x6a\x65\x7b\x6a\x05\x37\x1c\x7d\x6d\xd4\xb2\x9f\x83\xac\x76\x24\xd8\x93\x04\xcb\x1e\x3f\x4d\xa5\x4e\xc0\x39\x58\x12\xe4\xc2\x68\x1a\x40\xc0\x7d\xd2\x5d\xc2\xf8\x23\x9c\xd1\xb3\xf4\x87\x76\x9c\xa7\xae\x61\xfd\x50\xa4\xe3\x9e\xa0\x9d\xd1\x34\xf3\xc1\x3a\x87\x92\x10\x03\x35\xd1\xcd\x13\xab\x8c\x8a\x2f\xab\xe2\xd3\xdd\x43\x81\x7c\xfd\x88\x2f\xf9\x66\x93\xaf\x8b\xc7\xf7\x38\x58\xed\x38\x2a\x68\x4f\x23\xca\xee\x7a\x67\xa9\xc6\xc1\x88\x18\xaf\x47\x70\x93\x08\x9f\xaf\x37\x57\x9f\xf2\x75\x91\xff\xb6\xba\x5d\x15\x8f\x60\xc1\xcd\xaa\x58\x5f\x6f\xb7\xb8\xb9\xdb\x20\xc7\x7d\xbe\x29\x56\x57\x0f\xb7\xf9\x06\xf7\x0f\x9b\xfb\xbb\xed\xf5\x02\x5b\x4a\x5d\x51\xd2\xff\xd8\xf1\x66\xd8\x9d\x10\x6a\x52\x63\x5d\x98\x7c\x78\xe4\x88\xd0\x71\x74\x35\x3a\xb3\x27\x08\x55\x64\xf7\x54\xc3\xa0\xe2\xfe\xf8\x9f\x57\x9a\x58\xc6\xb1\x6f\x87\x99\xff\xe1\x14\xb1\x6a\xe0\x59\xe7\x08\x44\xf8\xa5\x53\xed\x97\x59\x76\x38\x1c\x16\xad\x8f\x0b\x96\x36\x73\x23\x2c\x64\xbf\x2e\x66\xb3\x6f\x33\x00\xc8\x32\x74\x36\x68\x5a\x4d\x82\xee\x4c\x9f\x7a\xe2\xbe\xe2\x9a\x02\x94\x51\x71\xf4\x4a\x12\x86\xec\x94\xba\xc4\xb7\xa7\xf9\xa4\xf5\xdc\x87\x31\x25\xc0\xc7\x5d\x49\x32\xca\xc7\xf4\x14\x5d\xe2\xed\x73\x76\x50\xea\x53\x25\xeb\xf7\xfc\x17\xd5\x83\x6b\xb4\x27\x39\x9e\x0a\x8e\x57\x90\xfa\xf8\xfd\x33\xe8\x2b\x55\x51\x29\x2c\x06\x75\x92\x2e\xd1\x44\x5f\xa5\xcb\xbb\x70\xdc\xce\x51\x97\x97\x18\xa7\x48\xcf\xde\xa4\xbb\xc4\x07\x38\x6e\x17\xdc\x2f\x94\xb7\x2a\xd6\xb7\x17\x97\xef\x9f\x73\x6c\x83\x0b\xed\x6c\x58\xa4\x41\xfe\xe0\xfe\xcf\xcb\xb3\x3e\x3d\xdf\xc5\xde\xbc\x39\x0b\x9f\x9e\x7f\x91\x0b\x84\x7f\x51\xe1\x03\xde\xbd\xa6\x1b\x92\x92\x21\x13\xf6\x6c\x62\x63\xa2\xd3\x97\xbe\x1c\xba\xd3\x3d\x9b\x4a\xa3\x71\x27\x2b\xd2\x9b\xc9\x0d\x8c\x9f\xdc\x6a\xc6\x4b\x4b\x94\x01\xf1\xaa\x3f\x4f\xf3\xd9\x54\x47\x28\xbc\x56\xc8\x38\x37\x14\x9b\x96\x3e\x1c\x6a\x49\xe4\x61\x95\xc4\xa4\x37\x95\xf7\x24\xe9\x13\x05\x21\x8d\xe2\xc3\x44\x4c\xb2\xc6\x7a\xe3\x26\xf6\xe9\x9e\x55\x4c\x65\x7d\x3b\xf6\x36\x86\x5e\x34\x57\xe9\xd7\x97\x8b\x1b\x99\x67\x17\x9f\xed\x79\x9a\xfd\x1d\x00\x00\xff\xff\xff\xc5\xf4\x08\xb3\x05\x00\x00")

func unigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_unigram_tracerJs,
		"unigram_tracer.js",
	)
}

func unigram_tracerJs() (*asset, error) {
	bytes, err := unigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "unigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc, 0xe6, 0x5c, 0x88, 0x18, 0xa7, 0x85, 0x61, 0x18, 0xc6, 0xec, 0x17, 0xfc, 0xdf, 0x9d, 0xc0, 0x1b, 0x49, 0xf8, 0x8d, 0xf1, 0xeb, 0x35, 0xf3, 0xd, 0x3e, 0xf6, 0xa3, 0xac, 0x8c, 0xba, 0x74}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"4byte_tracer.js":    _4byte_tracerJs,
	"bigram_tracer.js":   bigram_tracerJs,
	"call_tracer.js":     call_tracerJs,
	"evmdis_tracer.js":   evmdis_tracerJs,
	"noop_tracer.js":     noop_tracerJs,
	"opcount_tracer.js":  opcount_tracerJs,
	"prestate_tracer.js": prestate_tracerJs,
	"trigram_tracer.js":  trigram_tracerJs,
	"unigram_tracer.js":  unigram_tracerJs,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"4byte_tracer.js":    {_4byte_tracerJs, map[string]*bintree{}},
	"bigram_tracer.js":   {bigram_tracerJs, map[string]*bintree{}},
	"call_tracer.js":     {call_tracerJs, map[string]*bintree{}},
	"evmdis_tracer.js":   {evmdis_tracerJs, map[string]*bintree{}},
	"noop_tracer.js":     {noop_tracerJs, map[string]*bintree{}},
	"opcount_tracer.js":  {opcount_tracerJs, map[string]*bintree{}},
	"prestate_tracer.js": {prestate_tracerJs, map[string]*bintree{}},
	"trigram_tracer.js":  {trigram_tracerJs, map[string]*bintree{}},
	"unigram_tracer.js":  {unigram_tracerJs, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
